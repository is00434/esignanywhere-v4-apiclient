/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Configure a PdfSignatureCryptographicData.
 */
@ApiModel(description = "Configure a PdfSignatureCryptographicData.")
@JsonPropertyOrder({
  PdfSignatureCryptographicData.JSON_PROPERTY_SIGNATURE_HASH_ALGORITHM,
  PdfSignatureCryptographicData.JSON_PROPERTY_SIGNING_CERTIFICATE_DESCRIPTOR
})
@JsonTypeName("PdfSignatureCryptographicData")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-13T11:25:21.496783+01:00[Europe/Berlin]")
public class PdfSignatureCryptographicData {
  /**
   * Define the HashAlgorithm for the signature.
   */
  public enum SignatureHashAlgorithmEnum {
    SHA1("Sha1"),
    
    SHA256("Sha256"),
    
    SHA512("Sha512");

    private String value;

    SignatureHashAlgorithmEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SignatureHashAlgorithmEnum fromValue(String value) {
      for (SignatureHashAlgorithmEnum b : SignatureHashAlgorithmEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SIGNATURE_HASH_ALGORITHM = "SignatureHashAlgorithm";
  private SignatureHashAlgorithmEnum signatureHashAlgorithm;

  public static final String JSON_PROPERTY_SIGNING_CERTIFICATE_DESCRIPTOR = "SigningCertificateDescriptor";
  private SigningCertificateDescriptor signingCertificateDescriptor;


  public PdfSignatureCryptographicData signatureHashAlgorithm(SignatureHashAlgorithmEnum signatureHashAlgorithm) {
    
    this.signatureHashAlgorithm = signatureHashAlgorithm;
    return this;
  }

   /**
   * Define the HashAlgorithm for the signature.
   * @return signatureHashAlgorithm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define the HashAlgorithm for the signature.")
  @JsonProperty(JSON_PROPERTY_SIGNATURE_HASH_ALGORITHM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SignatureHashAlgorithmEnum getSignatureHashAlgorithm() {
    return signatureHashAlgorithm;
  }


  public void setSignatureHashAlgorithm(SignatureHashAlgorithmEnum signatureHashAlgorithm) {
    this.signatureHashAlgorithm = signatureHashAlgorithm;
  }


  public PdfSignatureCryptographicData signingCertificateDescriptor(SigningCertificateDescriptor signingCertificateDescriptor) {
    
    this.signingCertificateDescriptor = signingCertificateDescriptor;
    return this;
  }

   /**
   * Get signingCertificateDescriptor
   * @return signingCertificateDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SIGNING_CERTIFICATE_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SigningCertificateDescriptor getSigningCertificateDescriptor() {
    return signingCertificateDescriptor;
  }


  public void setSigningCertificateDescriptor(SigningCertificateDescriptor signingCertificateDescriptor) {
    this.signingCertificateDescriptor = signingCertificateDescriptor;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PdfSignatureCryptographicData pdfSignatureCryptographicData = (PdfSignatureCryptographicData) o;
    return Objects.equals(this.signatureHashAlgorithm, pdfSignatureCryptographicData.signatureHashAlgorithm) &&
        Objects.equals(this.signingCertificateDescriptor, pdfSignatureCryptographicData.signingCertificateDescriptor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(signatureHashAlgorithm, signingCertificateDescriptor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PdfSignatureCryptographicData {\n");
    sb.append("    signatureHashAlgorithm: ").append(toIndentedString(signatureHashAlgorithm)).append("\n");
    sb.append("    signingCertificateDescriptor: ").append(toIndentedString(signingCertificateDescriptor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

