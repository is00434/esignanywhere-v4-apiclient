/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A step in an envelope representing recipients.
 */
@ApiModel(description = "A step in an envelope representing recipients.")
@JsonPropertyOrder({
  SendEnvelopeStep.JSON_PROPERTY_ORDER_INDEX,
  SendEnvelopeStep.JSON_PROPERTY_RECIPIENTS,
  SendEnvelopeStep.JSON_PROPERTY_EMAIL_BODY_EXTRA,
  SendEnvelopeStep.JSON_PROPERTY_RECIPIENT_TYPE,
  SendEnvelopeStep.JSON_PROPERTY_WORKSTEP_CONFIGURATION,
  SendEnvelopeStep.JSON_PROPERTY_DOCUMENT_OPTIONS,
  SendEnvelopeStep.JSON_PROPERTY_USE_DEFAULT_AGREEMENTS
})
@JsonTypeName("SendEnvelopeStep")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-28T10:42:13.714738+01:00[Europe/Berlin]")
public class SendEnvelopeStep {
  public static final String JSON_PROPERTY_ORDER_INDEX = "OrderIndex";
  private Integer orderIndex;

  public static final String JSON_PROPERTY_RECIPIENTS = "Recipients";
  private List<SendEnvelopeRecipient> recipients = null;

  public static final String JSON_PROPERTY_EMAIL_BODY_EXTRA = "EmailBodyExtra";
  private String emailBodyExtra;

  /**
   * The recipient type of the step.
   */
  public enum RecipientTypeEnum {
    SIGNER("Signer"),
    
    CC("Cc"),
    
    ACKNOWLEDGE("Acknowledge"),
    
    PKCS7SIGNER("Pkcs7Signer"),
    
    AUTOMATIC("Automatic");

    private String value;

    RecipientTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RecipientTypeEnum fromValue(String value) {
      for (RecipientTypeEnum b : RecipientTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RECIPIENT_TYPE = "RecipientType";
  private RecipientTypeEnum recipientType = RecipientTypeEnum.SIGNER;

  public static final String JSON_PROPERTY_WORKSTEP_CONFIGURATION = "WorkstepConfiguration";
  private WorkstepConfiguration workstepConfiguration;

  public static final String JSON_PROPERTY_DOCUMENT_OPTIONS = "DocumentOptions";
  private List<SendEnvelopeDocumentOption> documentOptions = null;

  public static final String JSON_PROPERTY_USE_DEFAULT_AGREEMENTS = "UseDefaultAgreements";
  private Boolean useDefaultAgreements;


  public SendEnvelopeStep orderIndex(Integer orderIndex) {
    
    this.orderIndex = orderIndex;
    return this;
  }

   /**
   * The order index of the step.
   * @return orderIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order index of the step.")
  @JsonProperty(JSON_PROPERTY_ORDER_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOrderIndex() {
    return orderIndex;
  }


  public void setOrderIndex(Integer orderIndex) {
    this.orderIndex = orderIndex;
  }


  public SendEnvelopeStep recipients(List<SendEnvelopeRecipient> recipients) {
    
    this.recipients = recipients;
    return this;
  }

  public SendEnvelopeStep addRecipientsItem(SendEnvelopeRecipient recipientsItem) {
    if (this.recipients == null) {
      this.recipients = new ArrayList<SendEnvelopeRecipient>();
    }
    this.recipients.add(recipientsItem);
    return this;
  }

   /**
   * A list of recipients for this step (usally 1, multiple for bulk).  Not necessary in case of &lt;code&gt;RecipientType&lt;/code&gt; Automatic
   * @return recipients
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of recipients for this step (usally 1, multiple for bulk).  Not necessary in case of <code>RecipientType</code> Automatic")
  @JsonProperty(JSON_PROPERTY_RECIPIENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SendEnvelopeRecipient> getRecipients() {
    return recipients;
  }


  public void setRecipients(List<SendEnvelopeRecipient> recipients) {
    this.recipients = recipients;
  }


  public SendEnvelopeStep emailBodyExtra(String emailBodyExtra) {
    
    this.emailBodyExtra = emailBodyExtra;
    return this;
  }

   /**
   * The additional email body for the step.
   * @return emailBodyExtra
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The additional email body for the step.")
  @JsonProperty(JSON_PROPERTY_EMAIL_BODY_EXTRA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmailBodyExtra() {
    return emailBodyExtra;
  }


  public void setEmailBodyExtra(String emailBodyExtra) {
    this.emailBodyExtra = emailBodyExtra;
  }


  public SendEnvelopeStep recipientType(RecipientTypeEnum recipientType) {
    
    this.recipientType = recipientType;
    return this;
  }

   /**
   * The recipient type of the step.
   * @return recipientType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The recipient type of the step.")
  @JsonProperty(JSON_PROPERTY_RECIPIENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RecipientTypeEnum getRecipientType() {
    return recipientType;
  }


  public void setRecipientType(RecipientTypeEnum recipientType) {
    this.recipientType = recipientType;
  }


  public SendEnvelopeStep workstepConfiguration(WorkstepConfiguration workstepConfiguration) {
    
    this.workstepConfiguration = workstepConfiguration;
    return this;
  }

   /**
   * Get workstepConfiguration
   * @return workstepConfiguration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WORKSTEP_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WorkstepConfiguration getWorkstepConfiguration() {
    return workstepConfiguration;
  }


  public void setWorkstepConfiguration(WorkstepConfiguration workstepConfiguration) {
    this.workstepConfiguration = workstepConfiguration;
  }


  public SendEnvelopeStep documentOptions(List<SendEnvelopeDocumentOption> documentOptions) {
    
    this.documentOptions = documentOptions;
    return this;
  }

  public SendEnvelopeStep addDocumentOptionsItem(SendEnvelopeDocumentOption documentOptionsItem) {
    if (this.documentOptions == null) {
      this.documentOptions = new ArrayList<SendEnvelopeDocumentOption>();
    }
    this.documentOptions.add(documentOptionsItem);
    return this;
  }

   /**
   * The document options for the step.
   * @return documentOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The document options for the step.")
  @JsonProperty(JSON_PROPERTY_DOCUMENT_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SendEnvelopeDocumentOption> getDocumentOptions() {
    return documentOptions;
  }


  public void setDocumentOptions(List<SendEnvelopeDocumentOption> documentOptions) {
    this.documentOptions = documentOptions;
  }


  public SendEnvelopeStep useDefaultAgreements(Boolean useDefaultAgreements) {
    
    this.useDefaultAgreements = useDefaultAgreements;
    return this;
  }

   /**
   * Use default Agreements from SignatureDisclosure settings
   * @return useDefaultAgreements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Use default Agreements from SignatureDisclosure settings")
  @JsonProperty(JSON_PROPERTY_USE_DEFAULT_AGREEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUseDefaultAgreements() {
    return useDefaultAgreements;
  }


  public void setUseDefaultAgreements(Boolean useDefaultAgreements) {
    this.useDefaultAgreements = useDefaultAgreements;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendEnvelopeStep sendEnvelopeStep = (SendEnvelopeStep) o;
    return Objects.equals(this.orderIndex, sendEnvelopeStep.orderIndex) &&
        Objects.equals(this.recipients, sendEnvelopeStep.recipients) &&
        Objects.equals(this.emailBodyExtra, sendEnvelopeStep.emailBodyExtra) &&
        Objects.equals(this.recipientType, sendEnvelopeStep.recipientType) &&
        Objects.equals(this.workstepConfiguration, sendEnvelopeStep.workstepConfiguration) &&
        Objects.equals(this.documentOptions, sendEnvelopeStep.documentOptions) &&
        Objects.equals(this.useDefaultAgreements, sendEnvelopeStep.useDefaultAgreements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderIndex, recipients, emailBodyExtra, recipientType, workstepConfiguration, documentOptions, useDefaultAgreements);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendEnvelopeStep {\n");
    sb.append("    orderIndex: ").append(toIndentedString(orderIndex)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    emailBodyExtra: ").append(toIndentedString(emailBodyExtra)).append("\n");
    sb.append("    recipientType: ").append(toIndentedString(recipientType)).append("\n");
    sb.append("    workstepConfiguration: ").append(toIndentedString(workstepConfiguration)).append("\n");
    sb.append("    documentOptions: ").append(toIndentedString(documentOptions)).append("\n");
    sb.append("    useDefaultAgreements: ").append(toIndentedString(useDefaultAgreements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

