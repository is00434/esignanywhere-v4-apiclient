/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Configure the notifications.
 */
@ApiModel(description = "Configure the notifications.")
@JsonPropertyOrder({
  NotificationConfiguration.JSON_PROPERTY_NOTIFICATION_EVENTS_TO_SEND,
  NotificationConfiguration.JSON_PROPERTY_NOTIFICATION_URL
})
@JsonTypeName("NotificationConfiguration")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-28T10:42:13.714738+01:00[Europe/Berlin]")
public class NotificationConfiguration {
  public static final String JSON_PROPERTY_NOTIFICATION_EVENTS_TO_SEND = "NotificationEventsToSend";
  private NotificationEventsToSend notificationEventsToSend;

  public static final String JSON_PROPERTY_NOTIFICATION_URL = "NotificationUrl";
  private String notificationUrl;


  public NotificationConfiguration notificationEventsToSend(NotificationEventsToSend notificationEventsToSend) {
    
    this.notificationEventsToSend = notificationEventsToSend;
    return this;
  }

   /**
   * Get notificationEventsToSend
   * @return notificationEventsToSend
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NOTIFICATION_EVENTS_TO_SEND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NotificationEventsToSend getNotificationEventsToSend() {
    return notificationEventsToSend;
  }


  public void setNotificationEventsToSend(NotificationEventsToSend notificationEventsToSend) {
    this.notificationEventsToSend = notificationEventsToSend;
  }


  public NotificationConfiguration notificationUrl(String notificationUrl) {
    
    this.notificationUrl = notificationUrl;
    return this;
  }

   /**
   * The url of the notifcation.
   * @return notificationUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The url of the notifcation.")
  @JsonProperty(JSON_PROPERTY_NOTIFICATION_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNotificationUrl() {
    return notificationUrl;
  }


  public void setNotificationUrl(String notificationUrl) {
    this.notificationUrl = notificationUrl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificationConfiguration notificationConfiguration = (NotificationConfiguration) o;
    return Objects.equals(this.notificationEventsToSend, notificationConfiguration.notificationEventsToSend) &&
        Objects.equals(this.notificationUrl, notificationConfiguration.notificationUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(notificationEventsToSend, notificationUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificationConfiguration {\n");
    sb.append("    notificationEventsToSend: ").append(toIndentedString(notificationEventsToSend)).append("\n");
    sb.append("    notificationUrl: ").append(toIndentedString(notificationUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

