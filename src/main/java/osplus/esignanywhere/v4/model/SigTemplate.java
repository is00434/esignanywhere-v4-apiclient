/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A template for signature definitions.
 */
@ApiModel(description = "A template for signature definitions.")
@JsonPropertyOrder({
  SigTemplate.JSON_PROPERTY_SIZE,
  SigTemplate.JSON_PROPERTY_ALLOWED_SIGNATURE_TYPES
})
@JsonTypeName("SigTemplate")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-13T11:25:21.496783+01:00[Europe/Berlin]")
public class SigTemplate {
  public static final String JSON_PROPERTY_SIZE = "Size";
  private Size size;

  public static final String JSON_PROPERTY_ALLOWED_SIGNATURE_TYPES = "AllowedSignatureTypes";
  private List<SigType> allowedSignatureTypes = null;


  public SigTemplate size(Size size) {
    
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Size getSize() {
    return size;
  }


  public void setSize(Size size) {
    this.size = size;
  }


  public SigTemplate allowedSignatureTypes(List<SigType> allowedSignatureTypes) {
    
    this.allowedSignatureTypes = allowedSignatureTypes;
    return this;
  }

  public SigTemplate addAllowedSignatureTypesItem(SigType allowedSignatureTypesItem) {
    if (this.allowedSignatureTypes == null) {
      this.allowedSignatureTypes = new ArrayList<SigType>();
    }
    this.allowedSignatureTypes.add(allowedSignatureTypesItem);
    return this;
  }

   /**
   * Allowed signatures types.
   * @return allowedSignatureTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allowed signatures types.")
  @JsonProperty(JSON_PROPERTY_ALLOWED_SIGNATURE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SigType> getAllowedSignatureTypes() {
    return allowedSignatureTypes;
  }


  public void setAllowedSignatureTypes(List<SigType> allowedSignatureTypes) {
    this.allowedSignatureTypes = allowedSignatureTypes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SigTemplate sigTemplate = (SigTemplate) o;
    return Objects.equals(this.size, sigTemplate.size) &&
        Objects.equals(this.allowedSignatureTypes, sigTemplate.allowedSignatureTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(size, allowedSignatureTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SigTemplate {\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    allowedSignatureTypes: ").append(toIndentedString(allowedSignatureTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

