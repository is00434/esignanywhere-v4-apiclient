/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Authentication for a recipient.
 */
@ApiModel(description = "Authentication for a recipient.")
@JsonPropertyOrder({
  SendEnvelopeAuthentication.JSON_PROPERTY_METHOD,
  SendEnvelopeAuthentication.JSON_PROPERTY_PARAMETER,
  SendEnvelopeAuthentication.JSON_PROPERTY_FILTERS
})
@JsonTypeName("SendEnvelopeAuthentication")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-13T11:25:21.496783+01:00[Europe/Berlin]")
public class SendEnvelopeAuthentication {
  /**
   * The authentication method.
   */
  public enum MethodEnum {
    PIN("Pin"),
    
    SMS("Sms"),
    
    WINDOWSLIVE("WindowsLive"),
    
    CUSTOMOAUTHPROVIDER("CustomOAuthProvider"),
    
    CUSTOMSAMLPROVIDER("CustomSamlProvider"),
    
    BANKID("BankId");

    private String value;

    MethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MethodEnum fromValue(String value) {
      for (MethodEnum b : MethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_METHOD = "Method";
  private MethodEnum method;

  public static final String JSON_PROPERTY_PARAMETER = "Parameter";
  private String parameter;

  public static final String JSON_PROPERTY_FILTERS = "Filters";
  private List<SendEnvelopeAuthenticationFilter> filters = null;


  public SendEnvelopeAuthentication method(MethodEnum method) {
    
    this.method = method;
    return this;
  }

   /**
   * The authentication method.
   * @return method
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The authentication method.")
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MethodEnum getMethod() {
    return method;
  }


  public void setMethod(MethodEnum method) {
    this.method = method;
  }


  public SendEnvelopeAuthentication parameter(String parameter) {
    
    this.parameter = parameter;
    return this;
  }

   /**
   * The needed parameters for the authentication.
   * @return parameter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The needed parameters for the authentication.")
  @JsonProperty(JSON_PROPERTY_PARAMETER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParameter() {
    return parameter;
  }


  public void setParameter(String parameter) {
    this.parameter = parameter;
  }


  public SendEnvelopeAuthentication filters(List<SendEnvelopeAuthenticationFilter> filters) {
    
    this.filters = filters;
    return this;
  }

  public SendEnvelopeAuthentication addFiltersItem(SendEnvelopeAuthenticationFilter filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<SendEnvelopeAuthenticationFilter>();
    }
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * The filters for the authentication (OAUTH and SAML only).
   * @return filters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The filters for the authentication (OAUTH and SAML only).")
  @JsonProperty(JSON_PROPERTY_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SendEnvelopeAuthenticationFilter> getFilters() {
    return filters;
  }


  public void setFilters(List<SendEnvelopeAuthenticationFilter> filters) {
    this.filters = filters;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendEnvelopeAuthentication sendEnvelopeAuthentication = (SendEnvelopeAuthentication) o;
    return Objects.equals(this.method, sendEnvelopeAuthentication.method) &&
        Objects.equals(this.parameter, sendEnvelopeAuthentication.parameter) &&
        Objects.equals(this.filters, sendEnvelopeAuthentication.filters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(method, parameter, filters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendEnvelopeAuthentication {\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    parameter: ").append(toIndentedString(parameter)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

