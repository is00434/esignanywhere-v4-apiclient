/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Color of an text element.
 */
@ApiModel(description = "Color of an text element.")
@JsonPropertyOrder({
  TextColor.JSON_PROPERTY_A,
  TextColor.JSON_PROPERTY_R,
  TextColor.JSON_PROPERTY_G,
  TextColor.JSON_PROPERTY_B
})
@JsonTypeName("TextColor")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-28T10:42:13.714738+01:00[Europe/Berlin]")
public class TextColor {
  public static final String JSON_PROPERTY_A = "A";
  private Integer A;

  public static final String JSON_PROPERTY_R = "R";
  private Integer R;

  public static final String JSON_PROPERTY_G = "G";
  private Integer G;

  public static final String JSON_PROPERTY_B = "B";
  private Integer B;


  public TextColor A(Integer A) {
    
    this.A = A;
    return this;
  }

   /**
   * Defines A value of the color.
   * @return A
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines A value of the color.")
  @JsonProperty(JSON_PROPERTY_A)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getA() {
    return A;
  }


  public void setA(Integer A) {
    this.A = A;
  }


  public TextColor R(Integer R) {
    
    this.R = R;
    return this;
  }

   /**
   * Defines R value of the color.
   * @return R
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines R value of the color.")
  @JsonProperty(JSON_PROPERTY_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getR() {
    return R;
  }


  public void setR(Integer R) {
    this.R = R;
  }


  public TextColor G(Integer G) {
    
    this.G = G;
    return this;
  }

   /**
   * Defines G value of the color.
   * @return G
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines G value of the color.")
  @JsonProperty(JSON_PROPERTY_G)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getG() {
    return G;
  }


  public void setG(Integer G) {
    this.G = G;
  }


  public TextColor B(Integer B) {
    
    this.B = B;
    return this;
  }

   /**
   * Defines B value of the color.
   * @return B
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines B value of the color.")
  @JsonProperty(JSON_PROPERTY_B)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getB() {
    return B;
  }


  public void setB(Integer B) {
    this.B = B;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TextColor textColor = (TextColor) o;
    return Objects.equals(this.A, textColor.A) &&
        Objects.equals(this.R, textColor.R) &&
        Objects.equals(this.G, textColor.G) &&
        Objects.equals(this.B, textColor.B);
  }

  @Override
  public int hashCode() {
    return Objects.hash(A, R, G, B);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TextColor {\n");
    sb.append("    A: ").append(toIndentedString(A)).append("\n");
    sb.append("    R: ").append(toIndentedString(R)).append("\n");
    sb.append("    G: ").append(toIndentedString(G)).append("\n");
    sb.append("    B: ").append(toIndentedString(B)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

