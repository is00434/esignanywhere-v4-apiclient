/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import io.swagger.annotations.ApiModelProperty;

/**
 * SignatureAllOf
 */
@JsonPropertyOrder({
  SignatureAllOf.JSON_PROPERTY_POSITION_PAGE,
  SignatureAllOf.JSON_PROPERTY_POSITION,
  SignatureAllOf.JSON_PROPERTY_SIZE,
  SignatureAllOf.JSON_PROPERTY_ADDITIONAL_PARAMETERS,
  SignatureAllOf.JSON_PROPERTY_ALLOWED_SIGNATURE_TYPES,
  SignatureAllOf.JSON_PROPERTY_ADDITIONAL_CLIENT_INFORMATION,
  SignatureAllOf.JSON_PROPERTY_PATTERN,
  SignatureAllOf.JSON_PROPERTY_USE_TIMESTAMP,
  SignatureAllOf.JSON_PROPERTY_IS_REQUIRED,
  SignatureAllOf.JSON_PROPERTY_ID,
  SignatureAllOf.JSON_PROPERTY_DISPLAY_NAME,
  SignatureAllOf.JSON_PROPERTY_DOC_REF_NUMBER,
  SignatureAllOf.JSON_PROPERTY_ADDITIONAL_INFORMATION,
  SignatureAllOf.JSON_PROPERTY_BATCH_ID,
  SignatureAllOf.JSON_PROPERTY_DISCRIMINATOR_TYPE
})
@JsonTypeName("Signature_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-28T10:42:13.714738+01:00[Europe/Berlin]")
public class SignatureAllOf {
  public static final String JSON_PROPERTY_POSITION_PAGE = "PositionPage";
  private Integer positionPage;

  public static final String JSON_PROPERTY_POSITION = "Position";
  private Position position;

  public static final String JSON_PROPERTY_SIZE = "Size";
  private Size size;

  public static final String JSON_PROPERTY_ADDITIONAL_PARAMETERS = "AdditionalParameters";
  private List<KeyValuePair> additionalParameters = null;

  public static final String JSON_PROPERTY_ALLOWED_SIGNATURE_TYPES = "AllowedSignatureTypes";
  private List<SigType> allowedSignatureTypes = null;

  public static final String JSON_PROPERTY_ADDITIONAL_CLIENT_INFORMATION = "AdditionalClientInformation";
  private String additionalClientInformation;

  public static final String JSON_PROPERTY_PATTERN = "Pattern";
  private String pattern;

  public static final String JSON_PROPERTY_USE_TIMESTAMP = "UseTimestamp";
  private Boolean useTimestamp = false;

  public static final String JSON_PROPERTY_IS_REQUIRED = "IsRequired";
  private Boolean isRequired = false;

  public static final String JSON_PROPERTY_ID = "Id";
  private String id;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "DisplayName";
  private String displayName;

  public static final String JSON_PROPERTY_DOC_REF_NUMBER = "DocRefNumber";
  private Integer docRefNumber;

  public static final String JSON_PROPERTY_ADDITIONAL_INFORMATION = "AdditionalInformation";
  private String additionalInformation;

  public static final String JSON_PROPERTY_BATCH_ID = "BatchId";
  private String batchId;

  public static final String JSON_PROPERTY_DISCRIMINATOR_TYPE = "DiscriminatorType";
  private String discriminatorType;


  public SignatureAllOf positionPage(Integer positionPage) {
    
    this.positionPage = positionPage;
    return this;
  }

   /**
   * Page number of the signature.
   * @return positionPage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Page number of the signature.")
  @JsonProperty(JSON_PROPERTY_POSITION_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPositionPage() {
    return positionPage;
  }


  public void setPositionPage(Integer positionPage) {
    this.positionPage = positionPage;
  }


  public SignatureAllOf position(Position position) {
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Position getPosition() {
    return position;
  }


  public void setPosition(Position position) {
    this.position = position;
  }


  public SignatureAllOf size(Size size) {
    
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Size getSize() {
    return size;
  }


  public void setSize(Size size) {
    this.size = size;
  }


  public SignatureAllOf additionalParameters(List<KeyValuePair> additionalParameters) {
    
    this.additionalParameters = additionalParameters;
    return this;
  }

  public SignatureAllOf addAdditionalParametersItem(KeyValuePair additionalParametersItem) {
    if (this.additionalParameters == null) {
      this.additionalParameters = new ArrayList<KeyValuePair>();
    }
    this.additionalParameters.add(additionalParametersItem);
    return this;
  }

   /**
   * Collection of additional parameters, as KeyValue pair.
   * @return additionalParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Collection of additional parameters, as KeyValue pair.")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<KeyValuePair> getAdditionalParameters() {
    return additionalParameters;
  }


  public void setAdditionalParameters(List<KeyValuePair> additionalParameters) {
    this.additionalParameters = additionalParameters;
  }


  public SignatureAllOf allowedSignatureTypes(List<SigType> allowedSignatureTypes) {
    
    this.allowedSignatureTypes = allowedSignatureTypes;
    return this;
  }

  public SignatureAllOf addAllowedSignatureTypesItem(SigType allowedSignatureTypesItem) {
    if (this.allowedSignatureTypes == null) {
      this.allowedSignatureTypes = new ArrayList<SigType>();
    }
    this.allowedSignatureTypes.add(allowedSignatureTypesItem);
    return this;
  }

   /**
   * Collection of allowed SigTypes.
   * @return allowedSignatureTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Collection of allowed SigTypes.")
  @JsonProperty(JSON_PROPERTY_ALLOWED_SIGNATURE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SigType> getAllowedSignatureTypes() {
    return allowedSignatureTypes;
  }


  public void setAllowedSignatureTypes(List<SigType> allowedSignatureTypes) {
    this.allowedSignatureTypes = allowedSignatureTypes;
  }


  public SignatureAllOf additionalClientInformation(String additionalClientInformation) {
    
    this.additionalClientInformation = additionalClientInformation;
    return this;
  }

   /**
   * Additional client information.
   * @return additionalClientInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional client information.")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_CLIENT_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdditionalClientInformation() {
    return additionalClientInformation;
  }


  public void setAdditionalClientInformation(String additionalClientInformation) {
    this.additionalClientInformation = additionalClientInformation;
  }


  public SignatureAllOf pattern(String pattern) {
    
    this.pattern = pattern;
    return this;
  }

   /**
   * Pattern found from SigString parsing.
   * @return pattern
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pattern found from SigString parsing.")
  @JsonProperty(JSON_PROPERTY_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPattern() {
    return pattern;
  }


  public void setPattern(String pattern) {
    this.pattern = pattern;
  }


  public SignatureAllOf useTimestamp(Boolean useTimestamp) {
    
    this.useTimestamp = useTimestamp;
    return this;
  }

   /**
   * Use timestamp
   * @return useTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Use timestamp")
  @JsonProperty(JSON_PROPERTY_USE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUseTimestamp() {
    return useTimestamp;
  }


  public void setUseTimestamp(Boolean useTimestamp) {
    this.useTimestamp = useTimestamp;
  }


  public SignatureAllOf isRequired(Boolean isRequired) {
    
    this.isRequired = isRequired;
    return this;
  }

   /**
   * Define if the task is required.
   * @return isRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define if the task is required.")
  @JsonProperty(JSON_PROPERTY_IS_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsRequired() {
    return isRequired;
  }


  public void setIsRequired(Boolean isRequired) {
    this.isRequired = isRequired;
  }


  public SignatureAllOf id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Define the identifier for the task.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define the identifier for the task.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public SignatureAllOf displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Define the name to be displayed.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define the name to be displayed.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public SignatureAllOf docRefNumber(Integer docRefNumber) {
    
    this.docRefNumber = docRefNumber;
    return this;
  }

   /**
   * Document number of the task.
   * @return docRefNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Document number of the task.")
  @JsonProperty(JSON_PROPERTY_DOC_REF_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDocRefNumber() {
    return docRefNumber;
  }


  public void setDocRefNumber(Integer docRefNumber) {
    this.docRefNumber = docRefNumber;
  }


  public SignatureAllOf additionalInformation(String additionalInformation) {
    
    this.additionalInformation = additionalInformation;
    return this;
  }

   /**
   * Additional information for the client
   * @return additionalInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional information for the client")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdditionalInformation() {
    return additionalInformation;
  }


  public void setAdditionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
  }


  public SignatureAllOf batchId(String batchId) {
    
    this.batchId = batchId;
    return this;
  }

   /**
   * Defines multiple tasks which can be executed as a batch (e.g. signatures which accept same data).
   * @return batchId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines multiple tasks which can be executed as a batch (e.g. signatures which accept same data).")
  @JsonProperty(JSON_PROPERTY_BATCH_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBatchId() {
    return batchId;
  }


  public void setBatchId(String batchId) {
    this.batchId = batchId;
  }


  public SignatureAllOf discriminatorType(String discriminatorType) {
    
    this.discriminatorType = discriminatorType;
    return this;
  }

   /**
   * Property for parsing abstract base classes (polymorphism) in auto generated Swagger code.
   * @return discriminatorType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Property for parsing abstract base classes (polymorphism) in auto generated Swagger code.")
  @JsonProperty(JSON_PROPERTY_DISCRIMINATOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDiscriminatorType() {
    return discriminatorType;
  }


  public void setDiscriminatorType(String discriminatorType) {
    this.discriminatorType = discriminatorType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignatureAllOf signatureAllOf = (SignatureAllOf) o;
    return Objects.equals(this.positionPage, signatureAllOf.positionPage) &&
        Objects.equals(this.position, signatureAllOf.position) &&
        Objects.equals(this.size, signatureAllOf.size) &&
        Objects.equals(this.additionalParameters, signatureAllOf.additionalParameters) &&
        Objects.equals(this.allowedSignatureTypes, signatureAllOf.allowedSignatureTypes) &&
        Objects.equals(this.additionalClientInformation, signatureAllOf.additionalClientInformation) &&
        Objects.equals(this.pattern, signatureAllOf.pattern) &&
        Objects.equals(this.useTimestamp, signatureAllOf.useTimestamp) &&
        Objects.equals(this.isRequired, signatureAllOf.isRequired) &&
        Objects.equals(this.id, signatureAllOf.id) &&
        Objects.equals(this.displayName, signatureAllOf.displayName) &&
        Objects.equals(this.docRefNumber, signatureAllOf.docRefNumber) &&
        Objects.equals(this.additionalInformation, signatureAllOf.additionalInformation) &&
        Objects.equals(this.batchId, signatureAllOf.batchId) &&
        Objects.equals(this.discriminatorType, signatureAllOf.discriminatorType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(positionPage, position, size, additionalParameters, allowedSignatureTypes, additionalClientInformation, pattern, useTimestamp, isRequired, id, displayName, docRefNumber, additionalInformation, batchId, discriminatorType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignatureAllOf {\n");
    sb.append("    positionPage: ").append(toIndentedString(positionPage)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    additionalParameters: ").append(toIndentedString(additionalParameters)).append("\n");
    sb.append("    allowedSignatureTypes: ").append(toIndentedString(allowedSignatureTypes)).append("\n");
    sb.append("    additionalClientInformation: ").append(toIndentedString(additionalClientInformation)).append("\n");
    sb.append("    pattern: ").append(toIndentedString(pattern)).append("\n");
    sb.append("    useTimestamp: ").append(toIndentedString(useTimestamp)).append("\n");
    sb.append("    isRequired: ").append(toIndentedString(isRequired)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    docRefNumber: ").append(toIndentedString(docRefNumber)).append("\n");
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("    batchId: ").append(toIndentedString(batchId)).append("\n");
    sb.append("    discriminatorType: ").append(toIndentedString(discriminatorType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

