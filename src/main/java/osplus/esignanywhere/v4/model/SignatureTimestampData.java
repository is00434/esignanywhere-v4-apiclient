/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Configure SignatureTimestampData.
 */
@ApiModel(description = "Configure SignatureTimestampData.")
@JsonPropertyOrder({
  SignatureTimestampData.JSON_PROPERTY_URI,
  SignatureTimestampData.JSON_PROPERTY_USERNAME,
  SignatureTimestampData.JSON_PROPERTY_PASSWORD,
  SignatureTimestampData.JSON_PROPERTY_SIGNATURE_HASH_ALGORITHM,
  SignatureTimestampData.JSON_PROPERTY_AUTHENTICATION_CERTIFIATE_DESCRIPTOR
})
@JsonTypeName("SignatureTimestampData")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-13T11:25:21.496783+01:00[Europe/Berlin]")
public class SignatureTimestampData {
  public static final String JSON_PROPERTY_URI = "Uri";
  private String uri;

  public static final String JSON_PROPERTY_USERNAME = "Username";
  private String username;

  public static final String JSON_PROPERTY_PASSWORD = "Password";
  private String password;

  /**
   * Define the HashAlgorithm for the signature.
   */
  public enum SignatureHashAlgorithmEnum {
    SHA1("Sha1"),
    
    SHA256("Sha256"),
    
    SHA512("Sha512");

    private String value;

    SignatureHashAlgorithmEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SignatureHashAlgorithmEnum fromValue(String value) {
      for (SignatureHashAlgorithmEnum b : SignatureHashAlgorithmEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SIGNATURE_HASH_ALGORITHM = "SignatureHashAlgorithm";
  private SignatureHashAlgorithmEnum signatureHashAlgorithm;

  public static final String JSON_PROPERTY_AUTHENTICATION_CERTIFIATE_DESCRIPTOR = "AuthenticationCertifiateDescriptor";
  private AuthenticationCertificateDescriptor authenticationCertifiateDescriptor;


  public SignatureTimestampData uri(String uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * Uri for the SignatureTimestampData.
   * @return uri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Uri for the SignatureTimestampData.")
  @JsonProperty(JSON_PROPERTY_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUri() {
    return uri;
  }


  public void setUri(String uri) {
    this.uri = uri;
  }


  public SignatureTimestampData username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Define the username.
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define the username.")
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }


  public SignatureTimestampData password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Define the password.
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define the password.")
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public SignatureTimestampData signatureHashAlgorithm(SignatureHashAlgorithmEnum signatureHashAlgorithm) {
    
    this.signatureHashAlgorithm = signatureHashAlgorithm;
    return this;
  }

   /**
   * Define the HashAlgorithm for the signature.
   * @return signatureHashAlgorithm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define the HashAlgorithm for the signature.")
  @JsonProperty(JSON_PROPERTY_SIGNATURE_HASH_ALGORITHM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SignatureHashAlgorithmEnum getSignatureHashAlgorithm() {
    return signatureHashAlgorithm;
  }


  public void setSignatureHashAlgorithm(SignatureHashAlgorithmEnum signatureHashAlgorithm) {
    this.signatureHashAlgorithm = signatureHashAlgorithm;
  }


  public SignatureTimestampData authenticationCertifiateDescriptor(AuthenticationCertificateDescriptor authenticationCertifiateDescriptor) {
    
    this.authenticationCertifiateDescriptor = authenticationCertifiateDescriptor;
    return this;
  }

   /**
   * Get authenticationCertifiateDescriptor
   * @return authenticationCertifiateDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_CERTIFIATE_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AuthenticationCertificateDescriptor getAuthenticationCertifiateDescriptor() {
    return authenticationCertifiateDescriptor;
  }


  public void setAuthenticationCertifiateDescriptor(AuthenticationCertificateDescriptor authenticationCertifiateDescriptor) {
    this.authenticationCertifiateDescriptor = authenticationCertifiateDescriptor;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignatureTimestampData signatureTimestampData = (SignatureTimestampData) o;
    return Objects.equals(this.uri, signatureTimestampData.uri) &&
        Objects.equals(this.username, signatureTimestampData.username) &&
        Objects.equals(this.password, signatureTimestampData.password) &&
        Objects.equals(this.signatureHashAlgorithm, signatureTimestampData.signatureHashAlgorithm) &&
        Objects.equals(this.authenticationCertifiateDescriptor, signatureTimestampData.authenticationCertifiateDescriptor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, username, password, signatureHashAlgorithm, authenticationCertifiateDescriptor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignatureTimestampData {\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    signatureHashAlgorithm: ").append(toIndentedString(signatureHashAlgorithm)).append("\n");
    sb.append("    authenticationCertifiateDescriptor: ").append(toIndentedString(authenticationCertifiateDescriptor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

