/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Automated delegation settings.
 */
@ApiModel(description = "Automated delegation settings.")
@JsonPropertyOrder({
  AutomatedDelegationSettings.JSON_PROPERTY_REASON,
  AutomatedDelegationSettings.JSON_PROPERTY_END_DATE,
  AutomatedDelegationSettings.JSON_PROPERTY_DELEGATEE_USER_ID,
  AutomatedDelegationSettings.JSON_PROPERTY_UTILIZE_ALSO_ON_COPY_RECIPIENTS
})
@JsonTypeName("AutomatedDelegationSettings")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-13T11:25:21.496783+01:00[Europe/Berlin]")
public class AutomatedDelegationSettings {
  public static final String JSON_PROPERTY_REASON = "Reason";
  private String reason;

  public static final String JSON_PROPERTY_END_DATE = "EndDate";
  private String endDate;

  public static final String JSON_PROPERTY_DELEGATEE_USER_ID = "DelegateeUserId";
  private String delegateeUserId;

  public static final String JSON_PROPERTY_UTILIZE_ALSO_ON_COPY_RECIPIENTS = "UtilizeAlsoOnCopyRecipients";
  private Boolean utilizeAlsoOnCopyRecipients;


  public AutomatedDelegationSettings reason(String reason) {
    
    this.reason = reason;
    return this;
  }

   /**
   * Reason for automated delagation.
   * @return reason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason for automated delagation.")
  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReason() {
    return reason;
  }


  public void setReason(String reason) {
    this.reason = reason;
  }


  public AutomatedDelegationSettings endDate(String endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Endtime of automated delegation.
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Endtime of automated delegation.")
  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndDate() {
    return endDate;
  }


  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }


  public AutomatedDelegationSettings delegateeUserId(String delegateeUserId) {
    
    this.delegateeUserId = delegateeUserId;
    return this;
  }

   /**
   * Delegatee user id.
   * @return delegateeUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Delegatee user id.")
  @JsonProperty(JSON_PROPERTY_DELEGATEE_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDelegateeUserId() {
    return delegateeUserId;
  }


  public void setDelegateeUserId(String delegateeUserId) {
    this.delegateeUserId = delegateeUserId;
  }


  public AutomatedDelegationSettings utilizeAlsoOnCopyRecipients(Boolean utilizeAlsoOnCopyRecipients) {
    
    this.utilizeAlsoOnCopyRecipients = utilizeAlsoOnCopyRecipients;
    return this;
  }

   /**
   * If cc recipient should be delgated.
   * @return utilizeAlsoOnCopyRecipients
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If cc recipient should be delgated.")
  @JsonProperty(JSON_PROPERTY_UTILIZE_ALSO_ON_COPY_RECIPIENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUtilizeAlsoOnCopyRecipients() {
    return utilizeAlsoOnCopyRecipients;
  }


  public void setUtilizeAlsoOnCopyRecipients(Boolean utilizeAlsoOnCopyRecipients) {
    this.utilizeAlsoOnCopyRecipients = utilizeAlsoOnCopyRecipients;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomatedDelegationSettings automatedDelegationSettings = (AutomatedDelegationSettings) o;
    return Objects.equals(this.reason, automatedDelegationSettings.reason) &&
        Objects.equals(this.endDate, automatedDelegationSettings.endDate) &&
        Objects.equals(this.delegateeUserId, automatedDelegationSettings.delegateeUserId) &&
        Objects.equals(this.utilizeAlsoOnCopyRecipients, automatedDelegationSettings.utilizeAlsoOnCopyRecipients);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reason, endDate, delegateeUserId, utilizeAlsoOnCopyRecipients);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomatedDelegationSettings {\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    delegateeUserId: ").append(toIndentedString(delegateeUserId)).append("\n");
    sb.append("    utilizeAlsoOnCopyRecipients: ").append(toIndentedString(utilizeAlsoOnCopyRecipients)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

