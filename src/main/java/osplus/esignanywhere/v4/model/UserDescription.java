/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * UserDescription
 */
@JsonPropertyOrder({
  UserDescription.JSON_PROPERTY_EMAIL,
  UserDescription.JSON_PROPERTY_FIRST_NAME,
  UserDescription.JSON_PROPERTY_LAST_NAME,
  UserDescription.JSON_PROPERTY_USER_NAME,
  UserDescription.JSON_PROPERTY_SID,
  UserDescription.JSON_PROPERTY_JOB_TITLE,
  UserDescription.JSON_PROPERTY_PHONE_NUMBER,
  UserDescription.JSON_PROPERTY_ROLE,
  UserDescription.JSON_PROPERTY_IS_USER_MANAGER,
  UserDescription.JSON_PROPERTY_DEFAULT_SUBJECT,
  UserDescription.JSON_PROPERTY_DEFAULT_MESSAGE,
  UserDescription.JSON_PROPERTY_NOTIFY_RECIPIENT_ON_ACTION_NEEDED,
  UserDescription.JSON_PROPERTY_NOTIFY_SENDER_COMPLETE_ENVELOPE,
  UserDescription.JSON_PROPERTY_NOTIFY_SENDER_DECLINED,
  UserDescription.JSON_PROPERTY_NOTIFY_SENDER_DELIVERY_FAILED,
  UserDescription.JSON_PROPERTY_NOTIFY_SENDER_VIEWED,
  UserDescription.JSON_PROPERTY_SIGNATURE_IMAGE,
  UserDescription.JSON_PROPERTY_AUTHENTICATIONS
})
@JsonTypeName("UserDescription")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-28T10:42:13.714738+01:00[Europe/Berlin]")
public class UserDescription {
  public static final String JSON_PROPERTY_EMAIL = "Email";
  private String email;

  public static final String JSON_PROPERTY_FIRST_NAME = "FirstName";
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "LastName";
  private String lastName;

  public static final String JSON_PROPERTY_USER_NAME = "UserName";
  private String userName;

  public static final String JSON_PROPERTY_SID = "Sid";
  private String sid;

  public static final String JSON_PROPERTY_JOB_TITLE = "JobTitle";
  private String jobTitle;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "PhoneNumber";
  private String phoneNumber;

  /**
   * The role of the user, which defines its permissions.
   */
  public enum RoleEnum {
    NONE("None"),
    
    POWERUSER("PowerUser"),
    
    REGISTEREDSIGNER("RegisteredSigner");

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RoleEnum fromValue(String value) {
      for (RoleEnum b : RoleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ROLE = "Role";
  private RoleEnum role;

  public static final String JSON_PROPERTY_IS_USER_MANAGER = "IsUserManager";
  private Boolean isUserManager;

  public static final String JSON_PROPERTY_DEFAULT_SUBJECT = "DefaultSubject";
  private String defaultSubject;

  public static final String JSON_PROPERTY_DEFAULT_MESSAGE = "DefaultMessage";
  private String defaultMessage;

  public static final String JSON_PROPERTY_NOTIFY_RECIPIENT_ON_ACTION_NEEDED = "NotifyRecipientOnActionNeeded";
  private Boolean notifyRecipientOnActionNeeded;

  public static final String JSON_PROPERTY_NOTIFY_SENDER_COMPLETE_ENVELOPE = "NotifySenderCompleteEnvelope";
  private Boolean notifySenderCompleteEnvelope;

  public static final String JSON_PROPERTY_NOTIFY_SENDER_DECLINED = "NotifySenderDeclined";
  private Boolean notifySenderDeclined;

  public static final String JSON_PROPERTY_NOTIFY_SENDER_DELIVERY_FAILED = "NotifySenderDeliveryFailed";
  private Boolean notifySenderDeliveryFailed;

  public static final String JSON_PROPERTY_NOTIFY_SENDER_VIEWED = "NotifySenderViewed";
  private Boolean notifySenderViewed;

  public static final String JSON_PROPERTY_SIGNATURE_IMAGE = "SignatureImage";
  private byte[] signatureImage;

  public static final String JSON_PROPERTY_AUTHENTICATIONS = "Authentications";
  private List<UserAuthentication> authentications = null;


  public UserDescription email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * The email address of the User.
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The email address of the User.")
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public UserDescription firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * The first name of the user.
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The first name of the user.")
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public UserDescription lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * The last name of the user.
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The last name of the user.")
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public UserDescription userName(String userName) {
    
    this.userName = userName;
    return this;
  }

   /**
   * username of the user (used for usersynchronisation and alternative logins)
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "username of the user (used for usersynchronisation and alternative logins)")
  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserName() {
    return userName;
  }


  public void setUserName(String userName) {
    this.userName = userName;
  }


  public UserDescription sid(String sid) {
    
    this.sid = sid;
    return this;
  }

   /**
   * sid of the user (used for usersynchronisation and alternative logins)
   * @return sid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "sid of the user (used for usersynchronisation and alternative logins)")
  @JsonProperty(JSON_PROPERTY_SID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSid() {
    return sid;
  }


  public void setSid(String sid) {
    this.sid = sid;
  }


  public UserDescription jobTitle(String jobTitle) {
    
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * The job title of the user.
   * @return jobTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The job title of the user.")
  @JsonProperty(JSON_PROPERTY_JOB_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getJobTitle() {
    return jobTitle;
  }


  public void setJobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
  }


  public UserDescription phoneNumber(String phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * The phone number of the user.
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The phone number of the user.")
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneNumber() {
    return phoneNumber;
  }


  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public UserDescription role(RoleEnum role) {
    
    this.role = role;
    return this;
  }

   /**
   * The role of the user, which defines its permissions.
   * @return role
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The role of the user, which defines its permissions.")
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RoleEnum getRole() {
    return role;
  }


  public void setRole(RoleEnum role) {
    this.role = role;
  }


  public UserDescription isUserManager(Boolean isUserManager) {
    
    this.isUserManager = isUserManager;
    return this;
  }

   /**
   * Defines if the user can manage other users (add/delete/modify).
   * @return isUserManager
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines if the user can manage other users (add/delete/modify).")
  @JsonProperty(JSON_PROPERTY_IS_USER_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsUserManager() {
    return isUserManager;
  }


  public void setIsUserManager(Boolean isUserManager) {
    this.isUserManager = isUserManager;
  }


  public UserDescription defaultSubject(String defaultSubject) {
    
    this.defaultSubject = defaultSubject;
    return this;
  }

   /**
   * Get defaultSubject
   * @return defaultSubject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DEFAULT_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultSubject() {
    return defaultSubject;
  }


  public void setDefaultSubject(String defaultSubject) {
    this.defaultSubject = defaultSubject;
  }


  public UserDescription defaultMessage(String defaultMessage) {
    
    this.defaultMessage = defaultMessage;
    return this;
  }

   /**
   * Get defaultMessage
   * @return defaultMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DEFAULT_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultMessage() {
    return defaultMessage;
  }


  public void setDefaultMessage(String defaultMessage) {
    this.defaultMessage = defaultMessage;
  }


  public UserDescription notifyRecipientOnActionNeeded(Boolean notifyRecipientOnActionNeeded) {
    
    this.notifyRecipientOnActionNeeded = notifyRecipientOnActionNeeded;
    return this;
  }

   /**
   * Defines if the user gets an email notification every time if his actions are needed for an envelope.
   * @return notifyRecipientOnActionNeeded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines if the user gets an email notification every time if his actions are needed for an envelope.")
  @JsonProperty(JSON_PROPERTY_NOTIFY_RECIPIENT_ON_ACTION_NEEDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNotifyRecipientOnActionNeeded() {
    return notifyRecipientOnActionNeeded;
  }


  public void setNotifyRecipientOnActionNeeded(Boolean notifyRecipientOnActionNeeded) {
    this.notifyRecipientOnActionNeeded = notifyRecipientOnActionNeeded;
  }


  public UserDescription notifySenderCompleteEnvelope(Boolean notifySenderCompleteEnvelope) {
    
    this.notifySenderCompleteEnvelope = notifySenderCompleteEnvelope;
    return this;
  }

   /**
   * Defines if the user gets an email notification when a dedicated envelope is finished.
   * @return notifySenderCompleteEnvelope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines if the user gets an email notification when a dedicated envelope is finished.")
  @JsonProperty(JSON_PROPERTY_NOTIFY_SENDER_COMPLETE_ENVELOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNotifySenderCompleteEnvelope() {
    return notifySenderCompleteEnvelope;
  }


  public void setNotifySenderCompleteEnvelope(Boolean notifySenderCompleteEnvelope) {
    this.notifySenderCompleteEnvelope = notifySenderCompleteEnvelope;
  }


  public UserDescription notifySenderDeclined(Boolean notifySenderDeclined) {
    
    this.notifySenderDeclined = notifySenderDeclined;
    return this;
  }

   /**
   * Defines if the user gets an email notification when a recipient rejected an envelope.
   * @return notifySenderDeclined
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines if the user gets an email notification when a recipient rejected an envelope.")
  @JsonProperty(JSON_PROPERTY_NOTIFY_SENDER_DECLINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNotifySenderDeclined() {
    return notifySenderDeclined;
  }


  public void setNotifySenderDeclined(Boolean notifySenderDeclined) {
    this.notifySenderDeclined = notifySenderDeclined;
  }


  public UserDescription notifySenderDeliveryFailed(Boolean notifySenderDeliveryFailed) {
    
    this.notifySenderDeliveryFailed = notifySenderDeliveryFailed;
    return this;
  }

   /**
   * Sends an email to the user when the delivery of the envelope failed.
   * @return notifySenderDeliveryFailed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sends an email to the user when the delivery of the envelope failed.")
  @JsonProperty(JSON_PROPERTY_NOTIFY_SENDER_DELIVERY_FAILED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNotifySenderDeliveryFailed() {
    return notifySenderDeliveryFailed;
  }


  public void setNotifySenderDeliveryFailed(Boolean notifySenderDeliveryFailed) {
    this.notifySenderDeliveryFailed = notifySenderDeliveryFailed;
  }


  public UserDescription notifySenderViewed(Boolean notifySenderViewed) {
    
    this.notifySenderViewed = notifySenderViewed;
    return this;
  }

   /**
   * Sends an email when a recipient viewed an envelope of the user.
   * @return notifySenderViewed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sends an email when a recipient viewed an envelope of the user.")
  @JsonProperty(JSON_PROPERTY_NOTIFY_SENDER_VIEWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNotifySenderViewed() {
    return notifySenderViewed;
  }


  public void setNotifySenderViewed(Boolean notifySenderViewed) {
    this.notifySenderViewed = notifySenderViewed;
  }


  public UserDescription signatureImage(byte[] signatureImage) {
    
    this.signatureImage = signatureImage;
    return this;
  }

   /**
   * Base64 encoded byte array.
   * @return signatureImage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Base64 encoded byte array.")
  @JsonProperty(JSON_PROPERTY_SIGNATURE_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public byte[] getSignatureImage() {
    return signatureImage;
  }


  public void setSignatureImage(byte[] signatureImage) {
    this.signatureImage = signatureImage;
  }


  public UserDescription authentications(List<UserAuthentication> authentications) {
    
    this.authentications = authentications;
    return this;
  }

  public UserDescription addAuthenticationsItem(UserAuthentication authenticationsItem) {
    if (this.authentications == null) {
      this.authentications = new ArrayList<UserAuthentication>();
    }
    this.authentications.add(authenticationsItem);
    return this;
  }

   /**
   * Get authentications
   * @return authentications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AUTHENTICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserAuthentication> getAuthentications() {
    return authentications;
  }


  public void setAuthentications(List<UserAuthentication> authentications) {
    this.authentications = authentications;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserDescription userDescription = (UserDescription) o;
    return Objects.equals(this.email, userDescription.email) &&
        Objects.equals(this.firstName, userDescription.firstName) &&
        Objects.equals(this.lastName, userDescription.lastName) &&
        Objects.equals(this.userName, userDescription.userName) &&
        Objects.equals(this.sid, userDescription.sid) &&
        Objects.equals(this.jobTitle, userDescription.jobTitle) &&
        Objects.equals(this.phoneNumber, userDescription.phoneNumber) &&
        Objects.equals(this.role, userDescription.role) &&
        Objects.equals(this.isUserManager, userDescription.isUserManager) &&
        Objects.equals(this.defaultSubject, userDescription.defaultSubject) &&
        Objects.equals(this.defaultMessage, userDescription.defaultMessage) &&
        Objects.equals(this.notifyRecipientOnActionNeeded, userDescription.notifyRecipientOnActionNeeded) &&
        Objects.equals(this.notifySenderCompleteEnvelope, userDescription.notifySenderCompleteEnvelope) &&
        Objects.equals(this.notifySenderDeclined, userDescription.notifySenderDeclined) &&
        Objects.equals(this.notifySenderDeliveryFailed, userDescription.notifySenderDeliveryFailed) &&
        Objects.equals(this.notifySenderViewed, userDescription.notifySenderViewed) &&
        Arrays.equals(this.signatureImage, userDescription.signatureImage) &&
        Objects.equals(this.authentications, userDescription.authentications);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, firstName, lastName, userName, sid, jobTitle, phoneNumber, role, isUserManager, defaultSubject, defaultMessage, notifyRecipientOnActionNeeded, notifySenderCompleteEnvelope, notifySenderDeclined, notifySenderDeliveryFailed, notifySenderViewed, Arrays.hashCode(signatureImage), authentications);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserDescription {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    isUserManager: ").append(toIndentedString(isUserManager)).append("\n");
    sb.append("    defaultSubject: ").append(toIndentedString(defaultSubject)).append("\n");
    sb.append("    defaultMessage: ").append(toIndentedString(defaultMessage)).append("\n");
    sb.append("    notifyRecipientOnActionNeeded: ").append(toIndentedString(notifyRecipientOnActionNeeded)).append("\n");
    sb.append("    notifySenderCompleteEnvelope: ").append(toIndentedString(notifySenderCompleteEnvelope)).append("\n");
    sb.append("    notifySenderDeclined: ").append(toIndentedString(notifySenderDeclined)).append("\n");
    sb.append("    notifySenderDeliveryFailed: ").append(toIndentedString(notifySenderDeliveryFailed)).append("\n");
    sb.append("    notifySenderViewed: ").append(toIndentedString(notifySenderViewed)).append("\n");
    sb.append("    signatureImage: ").append(toIndentedString(signatureImage)).append("\n");
    sb.append("    authentications: ").append(toIndentedString(authentications)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

