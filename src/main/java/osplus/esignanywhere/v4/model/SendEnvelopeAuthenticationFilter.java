/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * The authentication filter.
 */
@ApiModel(description = "The authentication filter.")
@JsonPropertyOrder({
  SendEnvelopeAuthenticationFilter.JSON_PROPERTY_COMPARE_OPERATION,
  SendEnvelopeAuthenticationFilter.JSON_PROPERTY_FILTER_ID,
  SendEnvelopeAuthenticationFilter.JSON_PROPERTY_FILTER_VALUE
})
@JsonTypeName("SendEnvelopeAuthenticationFilter")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-13T11:25:21.496783+01:00[Europe/Berlin]")
public class SendEnvelopeAuthenticationFilter {
  /**
   * The compare method of the filter.
   */
  public enum CompareOperationEnum {
    EQUALS("Equals");

    private String value;

    CompareOperationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CompareOperationEnum fromValue(String value) {
      for (CompareOperationEnum b : CompareOperationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_COMPARE_OPERATION = "CompareOperation";
  private CompareOperationEnum compareOperation;

  public static final String JSON_PROPERTY_FILTER_ID = "FilterId";
  private String filterId;

  public static final String JSON_PROPERTY_FILTER_VALUE = "FilterValue";
  private String filterValue;


  public SendEnvelopeAuthenticationFilter compareOperation(CompareOperationEnum compareOperation) {
    
    this.compareOperation = compareOperation;
    return this;
  }

   /**
   * The compare method of the filter.
   * @return compareOperation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The compare method of the filter.")
  @JsonProperty(JSON_PROPERTY_COMPARE_OPERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CompareOperationEnum getCompareOperation() {
    return compareOperation;
  }


  public void setCompareOperation(CompareOperationEnum compareOperation) {
    this.compareOperation = compareOperation;
  }


  public SendEnvelopeAuthenticationFilter filterId(String filterId) {
    
    this.filterId = filterId;
    return this;
  }

   /**
   * The filter id of the authentication.
   * @return filterId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The filter id of the authentication.")
  @JsonProperty(JSON_PROPERTY_FILTER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilterId() {
    return filterId;
  }


  public void setFilterId(String filterId) {
    this.filterId = filterId;
  }


  public SendEnvelopeAuthenticationFilter filterValue(String filterValue) {
    
    this.filterValue = filterValue;
    return this;
  }

   /**
   * The filter value of the authentication.
   * @return filterValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The filter value of the authentication.")
  @JsonProperty(JSON_PROPERTY_FILTER_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilterValue() {
    return filterValue;
  }


  public void setFilterValue(String filterValue) {
    this.filterValue = filterValue;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendEnvelopeAuthenticationFilter sendEnvelopeAuthenticationFilter = (SendEnvelopeAuthenticationFilter) o;
    return Objects.equals(this.compareOperation, sendEnvelopeAuthenticationFilter.compareOperation) &&
        Objects.equals(this.filterId, sendEnvelopeAuthenticationFilter.filterId) &&
        Objects.equals(this.filterValue, sendEnvelopeAuthenticationFilter.filterValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(compareOperation, filterId, filterValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendEnvelopeAuthenticationFilter {\n");
    sb.append("    compareOperation: ").append(toIndentedString(compareOperation)).append("\n");
    sb.append("    filterId: ").append(toIndentedString(filterId)).append("\n");
    sb.append("    filterValue: ").append(toIndentedString(filterValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

