/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Configured StampImprintConfiguration.
 */
@ApiModel(description = "Configured StampImprintConfiguration.")
@JsonPropertyOrder({
  StampImprintConfiguration.JSON_PROPERTY_DISPLAY_EXTRA_INFORMATION,
  StampImprintConfiguration.JSON_PROPERTY_DISPLAY_EMAIL,
  StampImprintConfiguration.JSON_PROPERTY_DISPLAY_IP,
  StampImprintConfiguration.JSON_PROPERTY_DISPLAY_NAME,
  StampImprintConfiguration.JSON_PROPERTY_DISPLAY_SIGNATURE_DATE,
  StampImprintConfiguration.JSON_PROPERTY_FONT_FAMILY,
  StampImprintConfiguration.JSON_PROPERTY_FONT_SIZE,
  StampImprintConfiguration.JSON_PROPERTY_OVERRIDE_LEGACY_STAMP_IMPRINT,
  StampImprintConfiguration.JSON_PROPERTY_DISPLAY_TRANSACTION_ID,
  StampImprintConfiguration.JSON_PROPERTY_DISPLAY_TRANSAKTION_TOKEN,
  StampImprintConfiguration.JSON_PROPERTY_DISPLAY_PHONE_NUMBER
})
@JsonTypeName("StampImprintConfiguration")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-28T10:42:13.714738+01:00[Europe/Berlin]")
public class StampImprintConfiguration {
  public static final String JSON_PROPERTY_DISPLAY_EXTRA_INFORMATION = "DisplayExtraInformation";
  private Boolean displayExtraInformation;

  public static final String JSON_PROPERTY_DISPLAY_EMAIL = "DisplayEmail";
  private Boolean displayEmail;

  public static final String JSON_PROPERTY_DISPLAY_IP = "DisplayIp";
  private Boolean displayIp;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "DisplayName";
  private Boolean displayName;

  public static final String JSON_PROPERTY_DISPLAY_SIGNATURE_DATE = "DisplaySignatureDate";
  private Boolean displaySignatureDate;

  public static final String JSON_PROPERTY_FONT_FAMILY = "FontFamily";
  private String fontFamily;

  public static final String JSON_PROPERTY_FONT_SIZE = "FontSize";
  private Double fontSize;

  public static final String JSON_PROPERTY_OVERRIDE_LEGACY_STAMP_IMPRINT = "OverrideLegacyStampImprint";
  private Boolean overrideLegacyStampImprint = false;

  public static final String JSON_PROPERTY_DISPLAY_TRANSACTION_ID = "DisplayTransactionId";
  private Boolean displayTransactionId = true;

  public static final String JSON_PROPERTY_DISPLAY_TRANSAKTION_TOKEN = "DisplayTransaktionToken";
  private Boolean displayTransaktionToken = true;

  public static final String JSON_PROPERTY_DISPLAY_PHONE_NUMBER = "DisplayPhoneNumber";
  private Boolean displayPhoneNumber = true;


  public StampImprintConfiguration displayExtraInformation(Boolean displayExtraInformation) {
    
    this.displayExtraInformation = displayExtraInformation;
    return this;
  }

   /**
   * Define if extra information should be displayed.
   * @return displayExtraInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define if extra information should be displayed.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_EXTRA_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisplayExtraInformation() {
    return displayExtraInformation;
  }


  public void setDisplayExtraInformation(Boolean displayExtraInformation) {
    this.displayExtraInformation = displayExtraInformation;
  }


  public StampImprintConfiguration displayEmail(Boolean displayEmail) {
    
    this.displayEmail = displayEmail;
    return this;
  }

   /**
   * Define if email should be displayed.
   * @return displayEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define if email should be displayed.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisplayEmail() {
    return displayEmail;
  }


  public void setDisplayEmail(Boolean displayEmail) {
    this.displayEmail = displayEmail;
  }


  public StampImprintConfiguration displayIp(Boolean displayIp) {
    
    this.displayIp = displayIp;
    return this;
  }

   /**
   * Define if ip should be displayed.
   * @return displayIp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define if ip should be displayed.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisplayIp() {
    return displayIp;
  }


  public void setDisplayIp(Boolean displayIp) {
    this.displayIp = displayIp;
  }


  public StampImprintConfiguration displayName(Boolean displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Define if name should be displayed.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define if name should be displayed.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisplayName() {
    return displayName;
  }


  public void setDisplayName(Boolean displayName) {
    this.displayName = displayName;
  }


  public StampImprintConfiguration displaySignatureDate(Boolean displaySignatureDate) {
    
    this.displaySignatureDate = displaySignatureDate;
    return this;
  }

   /**
   * Define if signature date should be displayed.
   * @return displaySignatureDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define if signature date should be displayed.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_SIGNATURE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisplaySignatureDate() {
    return displaySignatureDate;
  }


  public void setDisplaySignatureDate(Boolean displaySignatureDate) {
    this.displaySignatureDate = displaySignatureDate;
  }


  public StampImprintConfiguration fontFamily(String fontFamily) {
    
    this.fontFamily = fontFamily;
    return this;
  }

   /**
   * Define a font-family.
   * @return fontFamily
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define a font-family.")
  @JsonProperty(JSON_PROPERTY_FONT_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFontFamily() {
    return fontFamily;
  }


  public void setFontFamily(String fontFamily) {
    this.fontFamily = fontFamily;
  }


  public StampImprintConfiguration fontSize(Double fontSize) {
    
    this.fontSize = fontSize;
    return this;
  }

   /**
   * Define a font-size.
   * @return fontSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define a font-size.")
  @JsonProperty(JSON_PROPERTY_FONT_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getFontSize() {
    return fontSize;
  }


  public void setFontSize(Double fontSize) {
    this.fontSize = fontSize;
  }


  public StampImprintConfiguration overrideLegacyStampImprint(Boolean overrideLegacyStampImprint) {
    
    this.overrideLegacyStampImprint = overrideLegacyStampImprint;
    return this;
  }

   /**
   * If set to false everything behaves as it does now, if set to true all StampImprintConfiguration values are evaluated independent of the signature type
   * @return overrideLegacyStampImprint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If set to false everything behaves as it does now, if set to true all StampImprintConfiguration values are evaluated independent of the signature type")
  @JsonProperty(JSON_PROPERTY_OVERRIDE_LEGACY_STAMP_IMPRINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOverrideLegacyStampImprint() {
    return overrideLegacyStampImprint;
  }


  public void setOverrideLegacyStampImprint(Boolean overrideLegacyStampImprint) {
    this.overrideLegacyStampImprint = overrideLegacyStampImprint;
  }


  public StampImprintConfiguration displayTransactionId(Boolean displayTransactionId) {
    
    this.displayTransactionId = displayTransactionId;
    return this;
  }

   /**
   * Only useful for transaction code signatures.
   * @return displayTransactionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only useful for transaction code signatures.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisplayTransactionId() {
    return displayTransactionId;
  }


  public void setDisplayTransactionId(Boolean displayTransactionId) {
    this.displayTransactionId = displayTransactionId;
  }


  public StampImprintConfiguration displayTransaktionToken(Boolean displayTransaktionToken) {
    
    this.displayTransaktionToken = displayTransaktionToken;
    return this;
  }

   /**
   * Only useful for transaction code signatures
   * @return displayTransaktionToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only useful for transaction code signatures")
  @JsonProperty(JSON_PROPERTY_DISPLAY_TRANSAKTION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisplayTransaktionToken() {
    return displayTransaktionToken;
  }


  public void setDisplayTransaktionToken(Boolean displayTransaktionToken) {
    this.displayTransaktionToken = displayTransaktionToken;
  }


  public StampImprintConfiguration displayPhoneNumber(Boolean displayPhoneNumber) {
    
    this.displayPhoneNumber = displayPhoneNumber;
    return this;
  }

   /**
   * Only useful for transaction code signatures as they define phone numbers
   * @return displayPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only useful for transaction code signatures as they define phone numbers")
  @JsonProperty(JSON_PROPERTY_DISPLAY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisplayPhoneNumber() {
    return displayPhoneNumber;
  }


  public void setDisplayPhoneNumber(Boolean displayPhoneNumber) {
    this.displayPhoneNumber = displayPhoneNumber;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StampImprintConfiguration stampImprintConfiguration = (StampImprintConfiguration) o;
    return Objects.equals(this.displayExtraInformation, stampImprintConfiguration.displayExtraInformation) &&
        Objects.equals(this.displayEmail, stampImprintConfiguration.displayEmail) &&
        Objects.equals(this.displayIp, stampImprintConfiguration.displayIp) &&
        Objects.equals(this.displayName, stampImprintConfiguration.displayName) &&
        Objects.equals(this.displaySignatureDate, stampImprintConfiguration.displaySignatureDate) &&
        Objects.equals(this.fontFamily, stampImprintConfiguration.fontFamily) &&
        Objects.equals(this.fontSize, stampImprintConfiguration.fontSize) &&
        Objects.equals(this.overrideLegacyStampImprint, stampImprintConfiguration.overrideLegacyStampImprint) &&
        Objects.equals(this.displayTransactionId, stampImprintConfiguration.displayTransactionId) &&
        Objects.equals(this.displayTransaktionToken, stampImprintConfiguration.displayTransaktionToken) &&
        Objects.equals(this.displayPhoneNumber, stampImprintConfiguration.displayPhoneNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayExtraInformation, displayEmail, displayIp, displayName, displaySignatureDate, fontFamily, fontSize, overrideLegacyStampImprint, displayTransactionId, displayTransaktionToken, displayPhoneNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StampImprintConfiguration {\n");
    sb.append("    displayExtraInformation: ").append(toIndentedString(displayExtraInformation)).append("\n");
    sb.append("    displayEmail: ").append(toIndentedString(displayEmail)).append("\n");
    sb.append("    displayIp: ").append(toIndentedString(displayIp)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    displaySignatureDate: ").append(toIndentedString(displaySignatureDate)).append("\n");
    sb.append("    fontFamily: ").append(toIndentedString(fontFamily)).append("\n");
    sb.append("    fontSize: ").append(toIndentedString(fontSize)).append("\n");
    sb.append("    overrideLegacyStampImprint: ").append(toIndentedString(overrideLegacyStampImprint)).append("\n");
    sb.append("    displayTransactionId: ").append(toIndentedString(displayTransactionId)).append("\n");
    sb.append("    displayTransaktionToken: ").append(toIndentedString(displayTransaktionToken)).append("\n");
    sb.append("    displayPhoneNumber: ").append(toIndentedString(displayPhoneNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

