/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Description for sending an envelope from a template.
 */
@ApiModel(description = "Description for sending an envelope from a template.")
@JsonPropertyOrder({
  EnvelopeSendFromTemplateModel.JSON_PROPERTY_TEMPLATE_ID,
  EnvelopeSendFromTemplateModel.JSON_PROPERTY_ENVELOPE_OVERRIDE_OPTIONS
})
@JsonTypeName("EnvelopeSendFromTemplateModel")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-13T11:25:21.496783+01:00[Europe/Berlin]")
public class EnvelopeSendFromTemplateModel {
  public static final String JSON_PROPERTY_TEMPLATE_ID = "TemplateId";
  private String templateId;

  public static final String JSON_PROPERTY_ENVELOPE_OVERRIDE_OPTIONS = "EnvelopeOverrideOptions";
  private EnvelopeOverrideOptions envelopeOverrideOptions;


  public EnvelopeSendFromTemplateModel templateId(String templateId) {
    
    this.templateId = templateId;
    return this;
  }

   /**
   * The Id of the template.
   * @return templateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Id of the template.")
  @JsonProperty(JSON_PROPERTY_TEMPLATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTemplateId() {
    return templateId;
  }


  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }


  public EnvelopeSendFromTemplateModel envelopeOverrideOptions(EnvelopeOverrideOptions envelopeOverrideOptions) {
    
    this.envelopeOverrideOptions = envelopeOverrideOptions;
    return this;
  }

   /**
   * Get envelopeOverrideOptions
   * @return envelopeOverrideOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ENVELOPE_OVERRIDE_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EnvelopeOverrideOptions getEnvelopeOverrideOptions() {
    return envelopeOverrideOptions;
  }


  public void setEnvelopeOverrideOptions(EnvelopeOverrideOptions envelopeOverrideOptions) {
    this.envelopeOverrideOptions = envelopeOverrideOptions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnvelopeSendFromTemplateModel envelopeSendFromTemplateModel = (EnvelopeSendFromTemplateModel) o;
    return Objects.equals(this.templateId, envelopeSendFromTemplateModel.templateId) &&
        Objects.equals(this.envelopeOverrideOptions, envelopeSendFromTemplateModel.envelopeOverrideOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(templateId, envelopeOverrideOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnvelopeSendFromTemplateModel {\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    envelopeOverrideOptions: ").append(toIndentedString(envelopeOverrideOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

