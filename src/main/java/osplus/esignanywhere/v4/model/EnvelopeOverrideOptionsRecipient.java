/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Description for overriding an existing recipient.
 */
@ApiModel(description = "Description for overriding an existing recipient.")
@JsonPropertyOrder({
  EnvelopeOverrideOptionsRecipient.JSON_PROPERTY_RECIPIENT_ID,
  EnvelopeOverrideOptionsRecipient.JSON_PROPERTY_ORDER_INDEX,
  EnvelopeOverrideOptionsRecipient.JSON_PROPERTY_EMAIL,
  EnvelopeOverrideOptionsRecipient.JSON_PROPERTY_RECIPIENT
})
@JsonTypeName("EnvelopeOverrideOptionsRecipient")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-28T10:42:13.714738+01:00[Europe/Berlin]")
public class EnvelopeOverrideOptionsRecipient {
  public static final String JSON_PROPERTY_RECIPIENT_ID = "RecipientId";
  private String recipientId;

  public static final String JSON_PROPERTY_ORDER_INDEX = "OrderIndex";
  private Integer orderIndex;

  public static final String JSON_PROPERTY_EMAIL = "Email";
  private String email;

  public static final String JSON_PROPERTY_RECIPIENT = "Recipient";
  private SendEnvelopeRecipient recipient;


  public EnvelopeOverrideOptionsRecipient recipientId(String recipientId) {
    
    this.recipientId = recipientId;
    return this;
  }

   /**
   * The id of the recipient to replace.
   * @return recipientId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the recipient to replace.")
  @JsonProperty(JSON_PROPERTY_RECIPIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecipientId() {
    return recipientId;
  }


  public void setRecipientId(String recipientId) {
    this.recipientId = recipientId;
  }


  public EnvelopeOverrideOptionsRecipient orderIndex(Integer orderIndex) {
    
    this.orderIndex = orderIndex;
    return this;
  }

   /**
   * The order index of the recipient to replace.
   * @return orderIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order index of the recipient to replace.")
  @JsonProperty(JSON_PROPERTY_ORDER_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOrderIndex() {
    return orderIndex;
  }


  public void setOrderIndex(Integer orderIndex) {
    this.orderIndex = orderIndex;
  }


  public EnvelopeOverrideOptionsRecipient email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * The email of the recipient to replace.
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The email of the recipient to replace.")
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public EnvelopeOverrideOptionsRecipient recipient(SendEnvelopeRecipient recipient) {
    
    this.recipient = recipient;
    return this;
  }

   /**
   * Get recipient
   * @return recipient
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RECIPIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SendEnvelopeRecipient getRecipient() {
    return recipient;
  }


  public void setRecipient(SendEnvelopeRecipient recipient) {
    this.recipient = recipient;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnvelopeOverrideOptionsRecipient envelopeOverrideOptionsRecipient = (EnvelopeOverrideOptionsRecipient) o;
    return Objects.equals(this.recipientId, envelopeOverrideOptionsRecipient.recipientId) &&
        Objects.equals(this.orderIndex, envelopeOverrideOptionsRecipient.orderIndex) &&
        Objects.equals(this.email, envelopeOverrideOptionsRecipient.email) &&
        Objects.equals(this.recipient, envelopeOverrideOptionsRecipient.recipient);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recipientId, orderIndex, email, recipient);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnvelopeOverrideOptionsRecipient {\n");
    sb.append("    recipientId: ").append(toIndentedString(recipientId)).append("\n");
    sb.append("    orderIndex: ").append(toIndentedString(orderIndex)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

