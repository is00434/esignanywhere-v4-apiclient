/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import io.swagger.annotations.ApiModelProperty;

/**
 * ComboBoxAllOf
 */
@JsonPropertyOrder({
  ComboBoxAllOf.JSON_PROPERTY_IS_READONLY,
  ComboBoxAllOf.JSON_PROPERTY_IS_REQUIRED,
  ComboBoxAllOf.JSON_PROPERTY_IS_EDITABLE,
  ComboBoxAllOf.JSON_PROPERTY_VALUE,
  ComboBoxAllOf.JSON_PROPERTY_ITEMS,
  ComboBoxAllOf.JSON_PROPERTY_FONT_SETTINGS,
  ComboBoxAllOf.JSON_PROPERTY_ID,
  ComboBoxAllOf.JSON_PROPERTY_POSITION_PAGE,
  ComboBoxAllOf.JSON_PROPERTY_DOC_REF_NUMBER,
  ComboBoxAllOf.JSON_PROPERTY_POSITION,
  ComboBoxAllOf.JSON_PROPERTY_SIZE,
  ComboBoxAllOf.JSON_PROPERTY_IS_HIDDEN,
  ComboBoxAllOf.JSON_PROPERTY_EXPORT_VALUE,
  ComboBoxAllOf.JSON_PROPERTY_DESCRIPTION,
  ComboBoxAllOf.JSON_PROPERTY_KEEP_EXISTING_VALUE,
  ComboBoxAllOf.JSON_PROPERTY_CUSTOM_ORDER,
  ComboBoxAllOf.JSON_PROPERTY_DISCRIMINATOR_TYPE
})
@JsonTypeName("ComboBox_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-28T10:42:13.714738+01:00[Europe/Berlin]")
public class ComboBoxAllOf {
  public static final String JSON_PROPERTY_IS_READONLY = "IsReadonly";
  private Boolean isReadonly = false;

  public static final String JSON_PROPERTY_IS_REQUIRED = "IsRequired";
  private Boolean isRequired = false;

  public static final String JSON_PROPERTY_IS_EDITABLE = "IsEditable";
  private Boolean isEditable = false;

  public static final String JSON_PROPERTY_VALUE = "Value";
  private String value;

  public static final String JSON_PROPERTY_ITEMS = "Items";
  private List<BoxItem> items = null;

  public static final String JSON_PROPERTY_FONT_SETTINGS = "FontSettings";
  private FontSettingsAdvanced fontSettings;

  public static final String JSON_PROPERTY_ID = "Id";
  private String id;

  public static final String JSON_PROPERTY_POSITION_PAGE = "PositionPage";
  private Integer positionPage = 1;

  public static final String JSON_PROPERTY_DOC_REF_NUMBER = "DocRefNumber";
  private Integer docRefNumber;

  public static final String JSON_PROPERTY_POSITION = "Position";
  private Position position;

  public static final String JSON_PROPERTY_SIZE = "Size";
  private Size size;

  public static final String JSON_PROPERTY_IS_HIDDEN = "IsHidden";
  private Boolean isHidden = false;

  public static final String JSON_PROPERTY_EXPORT_VALUE = "ExportValue";
  private String exportValue;

  public static final String JSON_PROPERTY_DESCRIPTION = "Description";
  private String description;

  public static final String JSON_PROPERTY_KEEP_EXISTING_VALUE = "KeepExistingValue";
  private Boolean keepExistingValue;

  public static final String JSON_PROPERTY_CUSTOM_ORDER = "CustomOrder";
  private Integer customOrder;

  public static final String JSON_PROPERTY_DISCRIMINATOR_TYPE = "DiscriminatorType";
  private String discriminatorType;


  public ComboBoxAllOf isReadonly(Boolean isReadonly) {
    
    this.isReadonly = isReadonly;
    return this;
  }

   /**
   * Defines if the combobox is readonly.
   * @return isReadonly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines if the combobox is readonly.")
  @JsonProperty(JSON_PROPERTY_IS_READONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsReadonly() {
    return isReadonly;
  }


  public void setIsReadonly(Boolean isReadonly) {
    this.isReadonly = isReadonly;
  }


  public ComboBoxAllOf isRequired(Boolean isRequired) {
    
    this.isRequired = isRequired;
    return this;
  }

   /**
   * Defines if the combobox is required.
   * @return isRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines if the combobox is required.")
  @JsonProperty(JSON_PROPERTY_IS_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsRequired() {
    return isRequired;
  }


  public void setIsRequired(Boolean isRequired) {
    this.isRequired = isRequired;
  }


  public ComboBoxAllOf isEditable(Boolean isEditable) {
    
    this.isEditable = isEditable;
    return this;
  }

   /**
   * Defines if the combobox is editable.
   * @return isEditable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines if the combobox is editable.")
  @JsonProperty(JSON_PROPERTY_IS_EDITABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsEditable() {
    return isEditable;
  }


  public void setIsEditable(Boolean isEditable) {
    this.isEditable = isEditable;
  }


  public ComboBoxAllOf value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * Value of the combobox.
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Value of the combobox.")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  public ComboBoxAllOf items(List<BoxItem> items) {
    
    this.items = items;
    return this;
  }

  public ComboBoxAllOf addItemsItem(BoxItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<BoxItem>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Collection of items in the combobox.
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Collection of items in the combobox.")
  @JsonProperty(JSON_PROPERTY_ITEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BoxItem> getItems() {
    return items;
  }


  public void setItems(List<BoxItem> items) {
    this.items = items;
  }


  public ComboBoxAllOf fontSettings(FontSettingsAdvanced fontSettings) {
    
    this.fontSettings = fontSettings;
    return this;
  }

   /**
   * Get fontSettings
   * @return fontSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FONT_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FontSettingsAdvanced getFontSettings() {
    return fontSettings;
  }


  public void setFontSettings(FontSettingsAdvanced fontSettings) {
    this.fontSettings = fontSettings;
  }


  public ComboBoxAllOf id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Identifier for the form.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifier for the form.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ComboBoxAllOf positionPage(Integer positionPage) {
    
    this.positionPage = positionPage;
    return this;
  }

   /**
   * Page number for the form.
   * @return positionPage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Page number for the form.")
  @JsonProperty(JSON_PROPERTY_POSITION_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPositionPage() {
    return positionPage;
  }


  public void setPositionPage(Integer positionPage) {
    this.positionPage = positionPage;
  }


  public ComboBoxAllOf docRefNumber(Integer docRefNumber) {
    
    this.docRefNumber = docRefNumber;
    return this;
  }

   /**
   * Document number for the form.
   * @return docRefNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Document number for the form.")
  @JsonProperty(JSON_PROPERTY_DOC_REF_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDocRefNumber() {
    return docRefNumber;
  }


  public void setDocRefNumber(Integer docRefNumber) {
    this.docRefNumber = docRefNumber;
  }


  public ComboBoxAllOf position(Position position) {
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Position getPosition() {
    return position;
  }


  public void setPosition(Position position) {
    this.position = position;
  }


  public ComboBoxAllOf size(Size size) {
    
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Size getSize() {
    return size;
  }


  public void setSize(Size size) {
    this.size = size;
  }


  public ComboBoxAllOf isHidden(Boolean isHidden) {
    
    this.isHidden = isHidden;
    return this;
  }

   /**
   * Define if it is hidden.
   * @return isHidden
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define if it is hidden.")
  @JsonProperty(JSON_PROPERTY_IS_HIDDEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsHidden() {
    return isHidden;
  }


  public void setIsHidden(Boolean isHidden) {
    this.isHidden = isHidden;
  }


  public ComboBoxAllOf exportValue(String exportValue) {
    
    this.exportValue = exportValue;
    return this;
  }

   /**
   * The export value of the form field.
   * @return exportValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The export value of the form field.")
  @JsonProperty(JSON_PROPERTY_EXPORT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExportValue() {
    return exportValue;
  }


  public void setExportValue(String exportValue) {
    this.exportValue = exportValue;
  }


  public ComboBoxAllOf description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description to provide details about the element.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description to provide details about the element.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ComboBoxAllOf keepExistingValue(Boolean keepExistingValue) {
    
    this.keepExistingValue = keepExistingValue;
    return this;
  }

   /**
   * If true, form value from Pdf is used.
   * @return keepExistingValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, form value from Pdf is used.")
  @JsonProperty(JSON_PROPERTY_KEEP_EXISTING_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getKeepExistingValue() {
    return keepExistingValue;
  }


  public void setKeepExistingValue(Boolean keepExistingValue) {
    this.keepExistingValue = keepExistingValue;
  }


   /**
   * Increasing order number. Can be used for tabbing through the form elements.
   * @return customOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Increasing order number. Can be used for tabbing through the form elements.")
  @JsonProperty(JSON_PROPERTY_CUSTOM_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCustomOrder() {
    return customOrder;
  }




  public ComboBoxAllOf discriminatorType(String discriminatorType) {
    
    this.discriminatorType = discriminatorType;
    return this;
  }

   /**
   * Property for parsing abstract base classes (polymorphism) in auto generated Swagger code.
   * @return discriminatorType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Property for parsing abstract base classes (polymorphism) in auto generated Swagger code.")
  @JsonProperty(JSON_PROPERTY_DISCRIMINATOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDiscriminatorType() {
    return discriminatorType;
  }


  public void setDiscriminatorType(String discriminatorType) {
    this.discriminatorType = discriminatorType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComboBoxAllOf comboBoxAllOf = (ComboBoxAllOf) o;
    return Objects.equals(this.isReadonly, comboBoxAllOf.isReadonly) &&
        Objects.equals(this.isRequired, comboBoxAllOf.isRequired) &&
        Objects.equals(this.isEditable, comboBoxAllOf.isEditable) &&
        Objects.equals(this.value, comboBoxAllOf.value) &&
        Objects.equals(this.items, comboBoxAllOf.items) &&
        Objects.equals(this.fontSettings, comboBoxAllOf.fontSettings) &&
        Objects.equals(this.id, comboBoxAllOf.id) &&
        Objects.equals(this.positionPage, comboBoxAllOf.positionPage) &&
        Objects.equals(this.docRefNumber, comboBoxAllOf.docRefNumber) &&
        Objects.equals(this.position, comboBoxAllOf.position) &&
        Objects.equals(this.size, comboBoxAllOf.size) &&
        Objects.equals(this.isHidden, comboBoxAllOf.isHidden) &&
        Objects.equals(this.exportValue, comboBoxAllOf.exportValue) &&
        Objects.equals(this.description, comboBoxAllOf.description) &&
        Objects.equals(this.keepExistingValue, comboBoxAllOf.keepExistingValue) &&
        Objects.equals(this.customOrder, comboBoxAllOf.customOrder) &&
        Objects.equals(this.discriminatorType, comboBoxAllOf.discriminatorType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isReadonly, isRequired, isEditable, value, items, fontSettings, id, positionPage, docRefNumber, position, size, isHidden, exportValue, description, keepExistingValue, customOrder, discriminatorType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComboBoxAllOf {\n");
    sb.append("    isReadonly: ").append(toIndentedString(isReadonly)).append("\n");
    sb.append("    isRequired: ").append(toIndentedString(isRequired)).append("\n");
    sb.append("    isEditable: ").append(toIndentedString(isEditable)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    fontSettings: ").append(toIndentedString(fontSettings)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    positionPage: ").append(toIndentedString(positionPage)).append("\n");
    sb.append("    docRefNumber: ").append(toIndentedString(docRefNumber)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    isHidden: ").append(toIndentedString(isHidden)).append("\n");
    sb.append("    exportValue: ").append(toIndentedString(exportValue)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    keepExistingValue: ").append(toIndentedString(keepExistingValue)).append("\n");
    sb.append("    customOrder: ").append(toIndentedString(customOrder)).append("\n");
    sb.append("    discriminatorType: ").append(toIndentedString(discriminatorType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

