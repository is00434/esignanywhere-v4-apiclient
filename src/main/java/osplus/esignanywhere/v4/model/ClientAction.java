/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Defines a client action.
 */
@ApiModel(description = "Defines a client action.")
@JsonPropertyOrder({
  ClientAction.JSON_PROPERTY_REMOVE_DOCUMENT_FROM_RECENT_DOCUMENT_LIST,
  ClientAction.JSON_PROPERTY_CALL_CLIENT_ACTION_ONLY_AFTER_SUCCESSFUL_SYNC,
  ClientAction.JSON_PROPERTY_CLIENT_NAME,
  ClientAction.JSON_PROPERTY_CLOSE_APP,
  ClientAction.JSON_PROPERTY_ACTION
})
@JsonTypeName("ClientAction")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-28T10:42:13.714738+01:00[Europe/Berlin]")
public class ClientAction {
  public static final String JSON_PROPERTY_REMOVE_DOCUMENT_FROM_RECENT_DOCUMENT_LIST = "RemoveDocumentFromRecentDocumentList";
  private Boolean removeDocumentFromRecentDocumentList;

  public static final String JSON_PROPERTY_CALL_CLIENT_ACTION_ONLY_AFTER_SUCCESSFUL_SYNC = "CallClientActionOnlyAfterSuccessfulSync";
  private Boolean callClientActionOnlyAfterSuccessfulSync = true;

  public static final String JSON_PROPERTY_CLIENT_NAME = "ClientName";
  private String clientName;

  public static final String JSON_PROPERTY_CLOSE_APP = "CloseApp";
  private Boolean closeApp;

  public static final String JSON_PROPERTY_ACTION = "Action";
  private String action;


  public ClientAction removeDocumentFromRecentDocumentList(Boolean removeDocumentFromRecentDocumentList) {
    
    this.removeDocumentFromRecentDocumentList = removeDocumentFromRecentDocumentList;
    return this;
  }

   /**
   * Removes the document from recent document list.
   * @return removeDocumentFromRecentDocumentList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Removes the document from recent document list.")
  @JsonProperty(JSON_PROPERTY_REMOVE_DOCUMENT_FROM_RECENT_DOCUMENT_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRemoveDocumentFromRecentDocumentList() {
    return removeDocumentFromRecentDocumentList;
  }


  public void setRemoveDocumentFromRecentDocumentList(Boolean removeDocumentFromRecentDocumentList) {
    this.removeDocumentFromRecentDocumentList = removeDocumentFromRecentDocumentList;
  }


  public ClientAction callClientActionOnlyAfterSuccessfulSync(Boolean callClientActionOnlyAfterSuccessfulSync) {
    
    this.callClientActionOnlyAfterSuccessfulSync = callClientActionOnlyAfterSuccessfulSync;
    return this;
  }

   /**
   * Call client action only after successful sync.
   * @return callClientActionOnlyAfterSuccessfulSync
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Call client action only after successful sync.")
  @JsonProperty(JSON_PROPERTY_CALL_CLIENT_ACTION_ONLY_AFTER_SUCCESSFUL_SYNC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCallClientActionOnlyAfterSuccessfulSync() {
    return callClientActionOnlyAfterSuccessfulSync;
  }


  public void setCallClientActionOnlyAfterSuccessfulSync(Boolean callClientActionOnlyAfterSuccessfulSync) {
    this.callClientActionOnlyAfterSuccessfulSync = callClientActionOnlyAfterSuccessfulSync;
  }


  public ClientAction clientName(String clientName) {
    
    this.clientName = clientName;
    return this;
  }

   /**
   * Name for the client.
   * @return clientName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name for the client.")
  @JsonProperty(JSON_PROPERTY_CLIENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientName() {
    return clientName;
  }


  public void setClientName(String clientName) {
    this.clientName = clientName;
  }


  public ClientAction closeApp(Boolean closeApp) {
    
    this.closeApp = closeApp;
    return this;
  }

   /**
   * Defines if the app should be closed.
   * @return closeApp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines if the app should be closed.")
  @JsonProperty(JSON_PROPERTY_CLOSE_APP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCloseApp() {
    return closeApp;
  }


  public void setCloseApp(Boolean closeApp) {
    this.closeApp = closeApp;
  }


  public ClientAction action(String action) {
    
    this.action = action;
    return this;
  }

   /**
   * Url of the action.
   * @return action
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Url of the action.")
  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAction() {
    return action;
  }


  public void setAction(String action) {
    this.action = action;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientAction clientAction = (ClientAction) o;
    return Objects.equals(this.removeDocumentFromRecentDocumentList, clientAction.removeDocumentFromRecentDocumentList) &&
        Objects.equals(this.callClientActionOnlyAfterSuccessfulSync, clientAction.callClientActionOnlyAfterSuccessfulSync) &&
        Objects.equals(this.clientName, clientAction.clientName) &&
        Objects.equals(this.closeApp, clientAction.closeApp) &&
        Objects.equals(this.action, clientAction.action);
  }

  @Override
  public int hashCode() {
    return Objects.hash(removeDocumentFromRecentDocumentList, callClientActionOnlyAfterSuccessfulSync, clientName, closeApp, action);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientAction {\n");
    sb.append("    removeDocumentFromRecentDocumentList: ").append(toIndentedString(removeDocumentFromRecentDocumentList)).append("\n");
    sb.append("    callClientActionOnlyAfterSuccessfulSync: ").append(toIndentedString(callClientActionOnlyAfterSuccessfulSync)).append("\n");
    sb.append("    clientName: ").append(toIndentedString(clientName)).append("\n");
    sb.append("    closeApp: ").append(toIndentedString(closeApp)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

