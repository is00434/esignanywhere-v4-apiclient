/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Occurred warnings of an recipient.
 */
@ApiModel(description = "Occurred warnings of an recipient.")
@JsonPropertyOrder({
  EnvelopeStatusWarning.JSON_PROPERTY_TYPE,
  EnvelopeStatusWarning.JSON_PROPERTY_CONTENT_XML_LIST
})
@JsonTypeName("EnvelopeStatusWarning")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-28T10:42:13.714738+01:00[Europe/Berlin]")
public class EnvelopeStatusWarning {
  /**
   * The warning type.
   */
  public enum TypeEnum {
    NONE("None"),
    
    LONGLIVEDDISPOSABLECERTIFICATEUSAGE("LongLivedDisposableCertificateUsage");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "Type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_CONTENT_XML_LIST = "ContentXmlList";
  private List<String> contentXmlList = null;


  public EnvelopeStatusWarning type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * The warning type.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The warning type.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public EnvelopeStatusWarning contentXmlList(List<String> contentXmlList) {
    
    this.contentXmlList = contentXmlList;
    return this;
  }

  public EnvelopeStatusWarning addContentXmlListItem(String contentXmlListItem) {
    if (this.contentXmlList == null) {
      this.contentXmlList = new ArrayList<String>();
    }
    this.contentXmlList.add(contentXmlListItem);
    return this;
  }

   /**
   * The warning contents.
   * @return contentXmlList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The warning contents.")
  @JsonProperty(JSON_PROPERTY_CONTENT_XML_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getContentXmlList() {
    return contentXmlList;
  }


  public void setContentXmlList(List<String> contentXmlList) {
    this.contentXmlList = contentXmlList;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnvelopeStatusWarning envelopeStatusWarning = (EnvelopeStatusWarning) o;
    return Objects.equals(this.type, envelopeStatusWarning.type) &&
        Objects.equals(this.contentXmlList, envelopeStatusWarning.contentXmlList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, contentXmlList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnvelopeStatusWarning {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    contentXmlList: ").append(toIndentedString(contentXmlList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

