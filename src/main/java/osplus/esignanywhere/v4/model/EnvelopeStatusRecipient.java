/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import org.threeten.bp.OffsetDateTime;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A represenation of a recipient for the current status of an envelope.
 */
@ApiModel(description = "A represenation of a recipient for the current status of an envelope.")
@JsonPropertyOrder({
  EnvelopeStatusRecipient.JSON_PROPERTY_ID,
  EnvelopeStatusRecipient.JSON_PROPERTY_FIRST_NAME,
  EnvelopeStatusRecipient.JSON_PROPERTY_LAST_NAME,
  EnvelopeStatusRecipient.JSON_PROPERTY_ORDER_INDEX,
  EnvelopeStatusRecipient.JSON_PROPERTY_EMAIL,
  EnvelopeStatusRecipient.JSON_PROPERTY_LANGUAGE_CODE,
  EnvelopeStatusRecipient.JSON_PROPERTY_STATUS,
  EnvelopeStatusRecipient.JSON_PROPERTY_STATUS_REASON,
  EnvelopeStatusRecipient.JSON_PROPERTY_RECIPIENT_TYPE,
  EnvelopeStatusRecipient.JSON_PROPERTY_SIGNED_DATE,
  EnvelopeStatusRecipient.JSON_PROPERTY_OPENED_DATE,
  EnvelopeStatusRecipient.JSON_PROPERTY_WORKSTEP_REDIRECTION_URL,
  EnvelopeStatusRecipient.JSON_PROPERTY_WARNINGS,
  EnvelopeStatusRecipient.JSON_PROPERTY_AUTHENTICATION,
  EnvelopeStatusRecipient.JSON_PROPERTY_IS_PARALLEL,
  EnvelopeStatusRecipient.JSON_PROPERTY_WORKSTEP_CONFIGURATION,
  EnvelopeStatusRecipient.JSON_PROPERTY_DISCLAIMER_DOCUMENTS
})
@JsonTypeName("EnvelopeStatusRecipient")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-13T11:25:21.496783+01:00[Europe/Berlin]")
public class EnvelopeStatusRecipient {
  public static final String JSON_PROPERTY_ID = "Id";
  private String id;

  public static final String JSON_PROPERTY_FIRST_NAME = "FirstName";
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "LastName";
  private String lastName;

  public static final String JSON_PROPERTY_ORDER_INDEX = "OrderIndex";
  private Integer orderIndex;

  public static final String JSON_PROPERTY_EMAIL = "Email";
  private String email;

  public static final String JSON_PROPERTY_LANGUAGE_CODE = "LanguageCode";
  private String languageCode;

  /**
   * The current workstep result status of the recipient.
   */
  public enum StatusEnum {
    NOTSIGNED("NotSigned"),
    
    SIGNED("Signed"),
    
    REJECTED("Rejected"),
    
    DELEGATED("Delegated");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "Status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_STATUS_REASON = "StatusReason";
  private String statusReason;

  /**
   * The type of the recipient.
   */
  public enum RecipientTypeEnum {
    SIGNER("Signer"),
    
    CC("Cc"),
    
    ACKNOWLEDGE("Acknowledge"),
    
    PKCS7SIGNER("Pkcs7Signer"),
    
    AUTOMATIC("Automatic");

    private String value;

    RecipientTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RecipientTypeEnum fromValue(String value) {
      for (RecipientTypeEnum b : RecipientTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RECIPIENT_TYPE = "RecipientType";
  private RecipientTypeEnum recipientType;

  public static final String JSON_PROPERTY_SIGNED_DATE = "SignedDate";
  private OffsetDateTime signedDate;

  public static final String JSON_PROPERTY_OPENED_DATE = "OpenedDate";
  private OffsetDateTime openedDate;

  public static final String JSON_PROPERTY_WORKSTEP_REDIRECTION_URL = "WorkstepRedirectionUrl";
  private String workstepRedirectionUrl;

  public static final String JSON_PROPERTY_WARNINGS = "Warnings";
  private List<EnvelopeStatusWarning> warnings = null;

  public static final String JSON_PROPERTY_AUTHENTICATION = "Authentication";
  private List<SendEnvelopeAuthentication> authentication = null;

  public static final String JSON_PROPERTY_IS_PARALLEL = "IsParallel";
  private Boolean isParallel;

  public static final String JSON_PROPERTY_WORKSTEP_CONFIGURATION = "WorkstepConfiguration";
  private WorkstepConfiguration workstepConfiguration;

  public static final String JSON_PROPERTY_DISCLAIMER_DOCUMENTS = "DisclaimerDocuments";
  private List<DisclaimerDocument> disclaimerDocuments = null;


  public EnvelopeStatusRecipient id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The id of the recipient.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the recipient.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EnvelopeStatusRecipient firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * The first name of the recipient.
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The first name of the recipient.")
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public EnvelopeStatusRecipient lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * The last name of the recipient.
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The last name of the recipient.")
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public EnvelopeStatusRecipient orderIndex(Integer orderIndex) {
    
    this.orderIndex = orderIndex;
    return this;
  }

   /**
   * The order in the envelope of the recipient.
   * @return orderIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order in the envelope of the recipient.")
  @JsonProperty(JSON_PROPERTY_ORDER_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOrderIndex() {
    return orderIndex;
  }


  public void setOrderIndex(Integer orderIndex) {
    this.orderIndex = orderIndex;
  }


  public EnvelopeStatusRecipient email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * The email address of the recipient.
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The email address of the recipient.")
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public EnvelopeStatusRecipient languageCode(String languageCode) {
    
    this.languageCode = languageCode;
    return this;
  }

   /**
   * The language code of the recipient.
   * @return languageCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The language code of the recipient.")
  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLanguageCode() {
    return languageCode;
  }


  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public EnvelopeStatusRecipient status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * The current workstep result status of the recipient.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The current workstep result status of the recipient.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public EnvelopeStatusRecipient statusReason(String statusReason) {
    
    this.statusReason = statusReason;
    return this;
  }

   /**
   * Get statusReason
   * @return statusReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatusReason() {
    return statusReason;
  }


  public void setStatusReason(String statusReason) {
    this.statusReason = statusReason;
  }


  public EnvelopeStatusRecipient recipientType(RecipientTypeEnum recipientType) {
    
    this.recipientType = recipientType;
    return this;
  }

   /**
   * The type of the recipient.
   * @return recipientType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the recipient.")
  @JsonProperty(JSON_PROPERTY_RECIPIENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RecipientTypeEnum getRecipientType() {
    return recipientType;
  }


  public void setRecipientType(RecipientTypeEnum recipientType) {
    this.recipientType = recipientType;
  }


  public EnvelopeStatusRecipient signedDate(OffsetDateTime signedDate) {
    
    this.signedDate = signedDate;
    return this;
  }

   /**
   * The date when the recipient finished its actions.
   * @return signedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the recipient finished its actions.")
  @JsonProperty(JSON_PROPERTY_SIGNED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getSignedDate() {
    return signedDate;
  }


  public void setSignedDate(OffsetDateTime signedDate) {
    this.signedDate = signedDate;
  }


  public EnvelopeStatusRecipient openedDate(OffsetDateTime openedDate) {
    
    this.openedDate = openedDate;
    return this;
  }

   /**
   * The date when the recipient opened the envelope.
   * @return openedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the recipient opened the envelope.")
  @JsonProperty(JSON_PROPERTY_OPENED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getOpenedDate() {
    return openedDate;
  }


  public void setOpenedDate(OffsetDateTime openedDate) {
    this.openedDate = openedDate;
  }


  public EnvelopeStatusRecipient workstepRedirectionUrl(String workstepRedirectionUrl) {
    
    this.workstepRedirectionUrl = workstepRedirectionUrl;
    return this;
  }

   /**
   * The url for generating a workstep for the recipient. Opens the viewer where the recipient has to perform his actions.
   * @return workstepRedirectionUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The url for generating a workstep for the recipient. Opens the viewer where the recipient has to perform his actions.")
  @JsonProperty(JSON_PROPERTY_WORKSTEP_REDIRECTION_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWorkstepRedirectionUrl() {
    return workstepRedirectionUrl;
  }


  public void setWorkstepRedirectionUrl(String workstepRedirectionUrl) {
    this.workstepRedirectionUrl = workstepRedirectionUrl;
  }


  public EnvelopeStatusRecipient warnings(List<EnvelopeStatusWarning> warnings) {
    
    this.warnings = warnings;
    return this;
  }

  public EnvelopeStatusRecipient addWarningsItem(EnvelopeStatusWarning warningsItem) {
    if (this.warnings == null) {
      this.warnings = new ArrayList<EnvelopeStatusWarning>();
    }
    this.warnings.add(warningsItem);
    return this;
  }

   /**
   * Occured warnings.
   * @return warnings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Occured warnings.")
  @JsonProperty(JSON_PROPERTY_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EnvelopeStatusWarning> getWarnings() {
    return warnings;
  }


  public void setWarnings(List<EnvelopeStatusWarning> warnings) {
    this.warnings = warnings;
  }


  public EnvelopeStatusRecipient authentication(List<SendEnvelopeAuthentication> authentication) {
    
    this.authentication = authentication;
    return this;
  }

  public EnvelopeStatusRecipient addAuthenticationItem(SendEnvelopeAuthentication authenticationItem) {
    if (this.authentication == null) {
      this.authentication = new ArrayList<SendEnvelopeAuthentication>();
    }
    this.authentication.add(authenticationItem);
    return this;
  }

   /**
   * The possible authentication methods for the recipient.
   * @return authentication
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The possible authentication methods for the recipient.")
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SendEnvelopeAuthentication> getAuthentication() {
    return authentication;
  }


  public void setAuthentication(List<SendEnvelopeAuthentication> authentication) {
    this.authentication = authentication;
  }


  public EnvelopeStatusRecipient isParallel(Boolean isParallel) {
    
    this.isParallel = isParallel;
    return this;
  }

   /**
   * Defines if the recipient is parallel and the corresponding envelope has recipients with the same order index.
   * @return isParallel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines if the recipient is parallel and the corresponding envelope has recipients with the same order index.")
  @JsonProperty(JSON_PROPERTY_IS_PARALLEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsParallel() {
    return isParallel;
  }


  public void setIsParallel(Boolean isParallel) {
    this.isParallel = isParallel;
  }


  public EnvelopeStatusRecipient workstepConfiguration(WorkstepConfiguration workstepConfiguration) {
    
    this.workstepConfiguration = workstepConfiguration;
    return this;
  }

   /**
   * Get workstepConfiguration
   * @return workstepConfiguration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WORKSTEP_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WorkstepConfiguration getWorkstepConfiguration() {
    return workstepConfiguration;
  }


  public void setWorkstepConfiguration(WorkstepConfiguration workstepConfiguration) {
    this.workstepConfiguration = workstepConfiguration;
  }


  public EnvelopeStatusRecipient disclaimerDocuments(List<DisclaimerDocument> disclaimerDocuments) {
    
    this.disclaimerDocuments = disclaimerDocuments;
    return this;
  }

  public EnvelopeStatusRecipient addDisclaimerDocumentsItem(DisclaimerDocument disclaimerDocumentsItem) {
    if (this.disclaimerDocuments == null) {
      this.disclaimerDocuments = new ArrayList<DisclaimerDocument>();
    }
    this.disclaimerDocuments.add(disclaimerDocumentsItem);
    return this;
  }

   /**
   * A list of disclaimer documents including their type for downloading.
   * @return disclaimerDocuments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of disclaimer documents including their type for downloading.")
  @JsonProperty(JSON_PROPERTY_DISCLAIMER_DOCUMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DisclaimerDocument> getDisclaimerDocuments() {
    return disclaimerDocuments;
  }


  public void setDisclaimerDocuments(List<DisclaimerDocument> disclaimerDocuments) {
    this.disclaimerDocuments = disclaimerDocuments;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnvelopeStatusRecipient envelopeStatusRecipient = (EnvelopeStatusRecipient) o;
    return Objects.equals(this.id, envelopeStatusRecipient.id) &&
        Objects.equals(this.firstName, envelopeStatusRecipient.firstName) &&
        Objects.equals(this.lastName, envelopeStatusRecipient.lastName) &&
        Objects.equals(this.orderIndex, envelopeStatusRecipient.orderIndex) &&
        Objects.equals(this.email, envelopeStatusRecipient.email) &&
        Objects.equals(this.languageCode, envelopeStatusRecipient.languageCode) &&
        Objects.equals(this.status, envelopeStatusRecipient.status) &&
        Objects.equals(this.statusReason, envelopeStatusRecipient.statusReason) &&
        Objects.equals(this.recipientType, envelopeStatusRecipient.recipientType) &&
        Objects.equals(this.signedDate, envelopeStatusRecipient.signedDate) &&
        Objects.equals(this.openedDate, envelopeStatusRecipient.openedDate) &&
        Objects.equals(this.workstepRedirectionUrl, envelopeStatusRecipient.workstepRedirectionUrl) &&
        Objects.equals(this.warnings, envelopeStatusRecipient.warnings) &&
        Objects.equals(this.authentication, envelopeStatusRecipient.authentication) &&
        Objects.equals(this.isParallel, envelopeStatusRecipient.isParallel) &&
        Objects.equals(this.workstepConfiguration, envelopeStatusRecipient.workstepConfiguration) &&
        Objects.equals(this.disclaimerDocuments, envelopeStatusRecipient.disclaimerDocuments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, firstName, lastName, orderIndex, email, languageCode, status, statusReason, recipientType, signedDate, openedDate, workstepRedirectionUrl, warnings, authentication, isParallel, workstepConfiguration, disclaimerDocuments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnvelopeStatusRecipient {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    orderIndex: ").append(toIndentedString(orderIndex)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    recipientType: ").append(toIndentedString(recipientType)).append("\n");
    sb.append("    signedDate: ").append(toIndentedString(signedDate)).append("\n");
    sb.append("    openedDate: ").append(toIndentedString(openedDate)).append("\n");
    sb.append("    workstepRedirectionUrl: ").append(toIndentedString(workstepRedirectionUrl)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("    authentication: ").append(toIndentedString(authentication)).append("\n");
    sb.append("    isParallel: ").append(toIndentedString(isParallel)).append("\n");
    sb.append("    workstepConfiguration: ").append(toIndentedString(workstepConfiguration)).append("\n");
    sb.append("    disclaimerDocuments: ").append(toIndentedString(disclaimerDocuments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

