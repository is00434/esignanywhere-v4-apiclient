/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import io.swagger.annotations.ApiModelProperty;

/**
 * AddFormFieldChoiceItemDescriptor
 */
@JsonPropertyOrder({
  AddFormFieldChoiceItemDescriptor.JSON_PROPERTY_EXPORT_VALUE,
  AddFormFieldChoiceItemDescriptor.JSON_PROPERTY_DISPLAY_VALUE,
  AddFormFieldChoiceItemDescriptor.JSON_PROPERTY_IS_SELECTED
})
@JsonTypeName("AddFormFieldChoiceItemDescriptor")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-28T10:42:13.714738+01:00[Europe/Berlin]")
public class AddFormFieldChoiceItemDescriptor {
  public static final String JSON_PROPERTY_EXPORT_VALUE = "ExportValue";
  private String exportValue;

  public static final String JSON_PROPERTY_DISPLAY_VALUE = "DisplayValue";
  private String displayValue;

  public static final String JSON_PROPERTY_IS_SELECTED = "IsSelected";
  private Boolean isSelected = false;


  public AddFormFieldChoiceItemDescriptor exportValue(String exportValue) {
    
    this.exportValue = exportValue;
    return this;
  }

   /**
   * The technical textual description.
   * @return exportValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The technical textual description.")
  @JsonProperty(JSON_PROPERTY_EXPORT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExportValue() {
    return exportValue;
  }


  public void setExportValue(String exportValue) {
    this.exportValue = exportValue;
  }


  public AddFormFieldChoiceItemDescriptor displayValue(String displayValue) {
    
    this.displayValue = displayValue;
    return this;
  }

   /**
   * The visual textual description.
   * @return displayValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The visual textual description.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayValue() {
    return displayValue;
  }


  public void setDisplayValue(String displayValue) {
    this.displayValue = displayValue;
  }


  public AddFormFieldChoiceItemDescriptor isSelected(Boolean isSelected) {
    
    this.isSelected = isSelected;
    return this;
  }

   /**
   * Boolean indicating if the item is selected by default.
   * @return isSelected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Boolean indicating if the item is selected by default.")
  @JsonProperty(JSON_PROPERTY_IS_SELECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsSelected() {
    return isSelected;
  }


  public void setIsSelected(Boolean isSelected) {
    this.isSelected = isSelected;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddFormFieldChoiceItemDescriptor addFormFieldChoiceItemDescriptor = (AddFormFieldChoiceItemDescriptor) o;
    return Objects.equals(this.exportValue, addFormFieldChoiceItemDescriptor.exportValue) &&
        Objects.equals(this.displayValue, addFormFieldChoiceItemDescriptor.displayValue) &&
        Objects.equals(this.isSelected, addFormFieldChoiceItemDescriptor.isSelected);
  }

  @Override
  public int hashCode() {
    return Objects.hash(exportValue, displayValue, isSelected);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddFormFieldChoiceItemDescriptor {\n");
    sb.append("    exportValue: ").append(toIndentedString(exportValue)).append("\n");
    sb.append("    displayValue: ").append(toIndentedString(displayValue)).append("\n");
    sb.append("    isSelected: ").append(toIndentedString(isSelected)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

