/*
 * eSignAnywhere.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package osplus.esignanywhere.v4.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Configuration regarding tools for auditing.
 */
@ApiModel(description = "Configuration regarding tools for auditing.")
@JsonPropertyOrder({
  AuditingToolsConfiguration.JSON_PROPERTY_WRITE_AUDIT_TRAIL,
  AuditingToolsConfiguration.JSON_PROPERTY_ID_STAMP_CONFIGURATION,
  AuditingToolsConfiguration.JSON_PROPERTY_NOTIFICATION_CONFIGURATION
})
@JsonTypeName("AuditingToolsConfiguration")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-28T10:42:13.714738+01:00[Europe/Berlin]")
public class AuditingToolsConfiguration {
  public static final String JSON_PROPERTY_WRITE_AUDIT_TRAIL = "WriteAuditTrail";
  private Boolean writeAuditTrail;

  public static final String JSON_PROPERTY_ID_STAMP_CONFIGURATION = "IdStampConfiguration";
  private WorkstepIdStampConfiguration idStampConfiguration;

  public static final String JSON_PROPERTY_NOTIFICATION_CONFIGURATION = "NotificationConfiguration";
  private NotificationConfiguration notificationConfiguration;


  public AuditingToolsConfiguration writeAuditTrail(Boolean writeAuditTrail) {
    
    this.writeAuditTrail = writeAuditTrail;
    return this;
  }

   /**
   * Defines if an audit trail file should be written.
   * @return writeAuditTrail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines if an audit trail file should be written.")
  @JsonProperty(JSON_PROPERTY_WRITE_AUDIT_TRAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getWriteAuditTrail() {
    return writeAuditTrail;
  }


  public void setWriteAuditTrail(Boolean writeAuditTrail) {
    this.writeAuditTrail = writeAuditTrail;
  }


  public AuditingToolsConfiguration idStampConfiguration(WorkstepIdStampConfiguration idStampConfiguration) {
    
    this.idStampConfiguration = idStampConfiguration;
    return this;
  }

   /**
   * Get idStampConfiguration
   * @return idStampConfiguration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID_STAMP_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WorkstepIdStampConfiguration getIdStampConfiguration() {
    return idStampConfiguration;
  }


  public void setIdStampConfiguration(WorkstepIdStampConfiguration idStampConfiguration) {
    this.idStampConfiguration = idStampConfiguration;
  }


  public AuditingToolsConfiguration notificationConfiguration(NotificationConfiguration notificationConfiguration) {
    
    this.notificationConfiguration = notificationConfiguration;
    return this;
  }

   /**
   * Get notificationConfiguration
   * @return notificationConfiguration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NOTIFICATION_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NotificationConfiguration getNotificationConfiguration() {
    return notificationConfiguration;
  }


  public void setNotificationConfiguration(NotificationConfiguration notificationConfiguration) {
    this.notificationConfiguration = notificationConfiguration;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditingToolsConfiguration auditingToolsConfiguration = (AuditingToolsConfiguration) o;
    return Objects.equals(this.writeAuditTrail, auditingToolsConfiguration.writeAuditTrail) &&
        Objects.equals(this.idStampConfiguration, auditingToolsConfiguration.idStampConfiguration) &&
        Objects.equals(this.notificationConfiguration, auditingToolsConfiguration.notificationConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(writeAuditTrail, idStampConfiguration, notificationConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditingToolsConfiguration {\n");
    sb.append("    writeAuditTrail: ").append(toIndentedString(writeAuditTrail)).append("\n");
    sb.append("    idStampConfiguration: ").append(toIndentedString(idStampConfiguration)).append("\n");
    sb.append("    notificationConfiguration: ").append(toIndentedString(notificationConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

